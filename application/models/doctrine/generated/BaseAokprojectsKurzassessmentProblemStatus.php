<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AokprojectsKurzassessmentProblemStatus', 'MDAT');

/**
 *
 * ISPC-2625, AOK Kurzassessment, 04.07.2020, elena
 * cloned from BaseAssessmentProblemStatus
 *
 * Maria:: Migration CISPC to ISPC 22.07.2020
 * BaseAokprojectsKurzssessmentProblemStatus
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $id
 * @property integer $assessment_problems_id
 * @property enum $status
 * @property enum $participant_type
 * @property integer $participant_id
 * @property string $participant_name
 * @property integer $isdelete
 * @property integer $create_user
 * @property timestamp $create_date
 * @property integer $change_user
 * @property timestamp $change_date
 *
 * @package    ISPC
 * @subpackage Application (2019-01-07)
 * @author     claudiu <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAokprojectsKurzassessmentProblemStatus extends Pms_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('aokprojects_kurzassessment_problem_status');

        $this->hasColumn('id', 'integer', 4, array(
            'type' => 'integer',
            'length' => 4,
            'fixed' => false,
            'unsigned' => false,
            'primary' => true,
            'autoincrement' => true,
        ));
        $this->hasColumn('assessment_problems_id', 'integer', 4, array(
            'type' => 'integer',
            'length' => 4,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => true,
            'autoincrement' => false,
        ));
        $this->hasColumn('status', 'enum', 11, array(
            'type' => 'enum',
            'length' => 11,
            'fixed' => false,
            'unsigned' => false,
            'values' =>
                array(
                    0 => 'open',
                    1 => 'todo',
                    2 => 'in progress',
                    3 => 'done',
                ),
            'primary' => false,
            'default' => 'open',
            'notnull' => true,
            'autoincrement' => false,
        ));
        $this->hasColumn('participant_type', 'enum', 15, array(
            'type' => 'enum',
            'length' => 15,
            'fixed' => false,
            'unsigned' => false,
            'values' =>
                array(
                    0 => 'user',
                    1 => 'voluntaryworker',
                    2 => 'manual',
                ),
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
            'comment' => 'manual is Jhon Doe',
        ));
        $this->hasColumn('participant_id', 'integer', 4, array(
            'type' => 'integer',
            'length' => 4,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
            'comment' => 'id from table users or voluntaryworkers, null=manual',
        ));
        $this->hasColumn('participant_name', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
            'comment' => 'manual participant name',
        ));
        $this->hasColumn('isdelete', 'integer', 1, array(
            'type' => 'integer',
            'length' => 1,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'default' => '0',
            'notnull' => true,
            'autoincrement' => false,
        ));
        $this->hasColumn('create_user', 'integer', 4, array(
            'type' => 'integer',
            'length' => 4,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => true,
            'autoincrement' => false,
        ));
        $this->hasColumn('create_date', 'timestamp', null, array(
            'type' => 'timestamp',
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => true,
            'autoincrement' => false,
        ));
        $this->hasColumn('change_user', 'integer', 4, array(
            'type' => 'integer',
            'length' => 4,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
        ));
        $this->hasColumn('change_date', 'timestamp', null, array(
            'type' => 'timestamp',
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
        ));


        $this->index('isdelete', array(
            'fields' =>
                array(
                    0 => 'isdelete',
                ),
        ));
        $this->index('assessment_problems_id', array(
            'fields' =>
                array(
                    0 => 'assessment_problems_id',
                ),
        ));
    }


    public function setUp()
    {
        parent::setUp();


        $this->hasOne('AokprojectsKurzassessmentProblems', array(
            'local' => 'assessment_problems_id',
            'foreign' => 'id'
        ));


        /*
         *  auto-added by builder
         */
        $this->actAs(new Softdelete());

        /*
         *  auto-added by builder
         */
        $this->actAs(new Timestamp());
    }
}
