<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ClientOrderRecipients', 'MDAT');

/**
 * BaseClientOrderRecipients
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $clientid
 * @property integer $userid
 * @property integer $isdelete
 * @property integer $create_user
 * @property timestamp $create_date
 * @property integer $change_user
 * @property timestamp $change_date
 * 
 * @package    ISPC
 * @subpackage Application (2018-12-19) ISPC-2247
 * @author     carmen <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClientOrderRecipients extends Pms_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('client_order_recipients');
        $this->option('type', 'INNODB');

        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('clientid', 'integer', 4, array(
        		'type' => 'integer',
        		'length' => 4,
        		'fixed' => false,
        		'unsigned' => false,
        		'primary' => false,
        		'autoincrement' => false,
        ));
        $this->hasColumn('userid', 'string', 255, array(
        		'type' => 'string',
        		'length' => 255,
        		'fixed' => false,
        		'unsigned' => false,
        		'primary' => false,
        		'autoincrement' => false,
        ));
        
        $this->index('id', array(
            'fields' => array('id'),
            'primary' => true
        ));
        
        $this->index('clientid+isdelete_idx', array(
            'fields' => array(
                'clientid',
                'isdelete'
            )
        ));
        
        $this->index('userid', array(
        		'fields' => array('userid')
        ));
    }

    public function setUp()
    {
        parent::setUp();
        
        $this->hasOne('User', array(
        		'local' => 'userid',
        		'foreign' => 'id'
        ));
        
        $this->actAs(new Timestamp());
        
        $this->actAs(new Softdelete());
        
    }
}