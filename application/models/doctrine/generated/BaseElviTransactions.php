<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ElviTransactions', 'SYSDAT');

/**
 * BaseElviTransactions
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $processToken
 * @property enum $action
 * @property blob $request
 * @property blob $response
 * @property timestamp $create_date
 * @property timestamp $change_date
 * @property integer $create_user
 * @property integer $change_user
 * @property integer $isdelete
 * 
 * @package    ISPC
 * @subpackage Application (2018-09-13)
 * @author     claudiu <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseElviTransactions extends Pms_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('elvi_transactions');

        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('processToken', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('action', 'enum', 28, array(
             'type' => 'enum',
             'length' => 28,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
                 
                 17=> 'user.connect', //added in v2.1
              0 => 'user.create',
              1 => 'user.login',
              2 => 'user.create&login', //this is missing in v2.1 api-docs
              3 => 'user.update', // this was removed in v2.1
              4 => 'user.list',
              5 => 'user.info',
                 
                 
                 
              6 => 'accesstoken.create',
              7 => 'accesstoken.login',
              8 => 'accesstoken.create&login',
              9 => 'accesstoken.list',
                18 => 'accesstoken.update',//added in v2.1
                19 => 'accesstoken.info',//added in v2.1
                 
                 
                 20 => 'organization.connect',//added in v2.1
              10 => 'organization.list',
                 21 => 'organization.info',
              11 => 'organization.create',//this is missing in v2.1 api-docs
              12 => 'organization.addOrRemoveUser',//this is missing in v2.1 api-docs
                 
              13 => 'group.list',
              14 => 'group.create',
              15 => 'group.addOrRemoveMember',
              16 => 'group.addOrRemoveViewer',
                 
                 22 => 'group.addMember', //this is my action
                 23 => 'group.removeMember',//this is my action
                 24 => 'group.addViewer',//this is my action
                 25 => 'group.removeViewer',//this is my action
             
                 
                 
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('request', 'object', null, array(
             'type' => 'object',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('response', 'object', null, array(
             'type' => 'object',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('create_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('change_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('create_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('change_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('isdelete', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
                
        $this->actAs(new Timestamp());
        
        $this->actAs(new Softdelete());
        
        $this->actAs(new SoftEncrypt(array(
//             'request',
//             'response',
        )));
        
        $this->actAs(new SoftDecrypt(array(
//             'request', 
//             'response',
        )));
        
    }
    
}