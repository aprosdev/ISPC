<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('FormsTextsList', 'SYSDAT');

/**
 * BaseFormsTextsList
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $clientid
 * @property integer $isdelete
 * @property string $form_name
 * @property string $field_name
 * @property string $field_value
 * @property timestamp $create_date
 * @property timestamp $change_date
 * @property integer $create_user
 * @property integer $change_user
 * 
 * @package    ISPC
 * @subpackage Application (2017-09-26)
 * @author     Ancuta <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFormsTextsList extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('forms_texts_list');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('clientid', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('isdelete', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('form_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('field_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('field_value', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        
        $this->index('clientid+isdelete', array(
            'fields' =>
            array(
                0 => 'clientid',
                1 => 'isdelete',
            ),
        ));
        $this->index('field_name', array(
            'fields' =>
            array(
                0 => 'field_name',
            ),
        ));
        $this->index('form_name', array(
            'fields' =>
            array(
                0 => 'form_name',
            ),
        ));
    }

    public function setUp()
    {
        parent::setUp();

        $this->actAs(new Timestamp());
        $this->actAs(new Softdelete());
    }
}