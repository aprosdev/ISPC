<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Hl7MessagesReceived', 'SYSDAT');

/**
 * BaseHl7MessagesReceived
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $messages_received_ID
 * @property integer $client_id
 * @property integer $port
 * @property blob $message
 * @property enum $fetched_by_master
 * @property integer $external_messages_received_ID
 * @property timestamp $create_date
 * @property timestamp $change_date
 * @property integer $create_user
 * @property integer $change_user
 * 
 * @package    ISPC
 * @subpackage Application (2018-07-02)
 * @author     claudiu <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHl7MessagesReceived extends Pms_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('hl7_messages_received');

        $this->hasColumn('messages_received_ID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('client_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('port', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('message', 'blob', null, array(
             'type' => 'blob',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('fetched_by_master', 'enum', 3, array(
             'type' => 'enum',
             'length' => 3,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'NO',
              1 => 'YES',
             ),
             'primary' => false,
             'default' => 'NO',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('external_messages_received_ID', 'integer', 4, array(
            'type' => 'integer',
            'length' => 4,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
        ));
        $this->hasColumn('create_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('change_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('create_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('change_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        
        $this->index('client_id', array(
            'fields' =>
            array(
                0 => 'client_id',
            ),
        ));
        $this->index('fetched_by_master', array(
            'fields' =>
            array(
                0 => 'fetched_by_master',
            ),
        ));
        $this->index('port', array(
            'fields' =>
            array(
                0 => 'port',
            ),
        ));
    }

    public function setUp()
    {
        parent::setUp();
        
        $this->hasOne('Hl7MessagesProcessed', array(
            'local' => 'messages_received_ID',
            'foreign' => 'messages_received_ID'
        ));
        
        $this->actAs(new Timestamp());
        	
        
        
        $this->actAs(new SoftEncrypt(array(
            'message',
        )));
        
        $this->actAs(new SoftDecrypt(array(
            'message',
        )));
        	
        
    }
}