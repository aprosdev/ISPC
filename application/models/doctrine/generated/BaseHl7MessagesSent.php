<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Hl7MessagesSent', 'SYSDAT');

/**
 * BaseHl7MessagesSent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $messages_sent_id
 * @property enum $parent_table
 * @property integer $parent_table_id
 * @property integer $client_id
 * @property integer $port
 * @property blob $message
 * @property string $message_type
 * @property blob $message_ack
 * @property integer $send_trys
 * @property enum $send_ok
 * @property integer $isdelete
 * @property timestamp $create_date
 * @property timestamp $change_date
 * @property integer $create_user
 * @property integer $change_user
 * 
 * @package    ISPC
 * @subpackage Application (2019-02-05)
 * @author     claudiu <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 * changes for ISPC-2459 14.10.2019 @Ancuta
 */
abstract class BaseHl7MessagesSent extends Pms_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('hl7_messages_sent');

        $this->hasColumn('messages_sent_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('parent_table', 'enum', 13, array(
             'type' => 'enum',
             'length' => 13,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'InvoiceSystem',
              1 => 'CronActivation',//ISPC-2459 Ancuta 06.08.2020
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        //ISPC-2459 Ancuta 06.08.2020
        $this->hasColumn('ipid', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
        ));
        // --
        $this->hasColumn('parent_table_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('item_day', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'Used to activate date in HL7- so invoice can be billed',
        ));
        
        $this->hasColumn('client_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('port', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('message', 'blob', null, array(
             'type' => 'blob',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('message_type', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'comment' => 'MSH MessageType + TriggerEvent',
             ));
        $this->hasColumn('message_ack', 'blob', null, array(
             'type' => 'blob',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('send_trys', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'comment' => 'how many times you\'se sent this parent+parent_id',
             ));
        $this->hasColumn('send_ok', 'enum', 3, array(
             'type' => 'enum',
             'length' => 3,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'no',
              1 => 'yes',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'message_ack response is ok',
             ));
        $this->hasColumn('isdelete', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'comment' => '1=softdeleted',
             ));
        $this->hasColumn('create_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('change_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('create_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('change_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));


        $this->index('client_id', array(
             'fields' => 
             array(
              0 => 'client_id',
             ),
             ));
        $this->index('port', array(
             'fields' => 
             array(
              0 => 'port',
             ),
             ));
    }    
            

    public function setUp()
    {
        parent::setUp();
        /*
         *  auto-added by builder
         */
        $this->actAs(new Softdelete());
            
        /*
         *  auto-added by builder
         */
        $this->actAs(new Timestamp());
        
        
        $this->actAs(new SoftEncrypt(array(
            'message',
            'message_ack',
        
        )));
        
        $this->actAs(new SoftDecrypt(array(
            'message',
            'message_ack',
        )));
        
    }
}