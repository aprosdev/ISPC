<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('IntenseConnectionsOptions', 'SYSDAT');

/**
 * BaseIntenseConnectionsOptions
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * Ancuta ISPC-2614
 * @property integer $id
 * @property integer $intense_connection_id
 * @property string $option_name
 * @property enum $option_type
 * @property integer $isdelete
 * @property timestamp $change_date
 * @property integer $change_user
 * @property timestamp $create_date
 * @property integer $create_user
 * 
 * @package    ISPC
 * @subpackage Application (2020-07-14)
 * @author     Ancuta <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIntenseConnectionsOptions extends Pms_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('intense_connections_options');

        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('intense_connection_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'comment' => 'id from intense_connections',
             ));
        $this->hasColumn('option_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('option_type', 'enum', 17, array(
             'type' => 'enum',
             'length' => 17,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'patient',
              1 => 'patient_details',
              2 => 'patient_suppliers',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'comment' => 'details = stammdaten, suppliers = versorger',
             ));
        $this->hasColumn('isdelete', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('change_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('change_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('create_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('create_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }    
            

    public function setUp()
    {
        parent::setUp();
        
        $this->hasOne('IntenseConnections', array(
            'local' => 'intense_connection_id',
            'foreign' => 'id'
        ));
        
        
        /*
         *  auto-added by builder
         */
        $this->actAs(new Softdelete());
            
        /*
         *  auto-added by builder
         */
        $this->actAs(new Timestamp());
    }
}