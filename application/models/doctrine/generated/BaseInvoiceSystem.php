<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('InvoiceSystem', 'SYSDAT');

/**
 * BaseInvoiceSystem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property enum $invoice_type
 * @property timestamp $invoice_start
 * @property timestamp $invoice_end
 * @property timestamp $start_active
 * @property timestamp $end_active
 * @property timestamp $start_sapv
 * @property timestamp $end_sapv
 * @property timestamp $sapv_approve_date
 * @property string $sapv_approve_nr
 * @property string $ipid
 * @property integer $client
 * @property string $prefix
 * @property integer $invoice_number
 * @property decimal $invoice_total
 * @property timestamp $paid_date
 * @property integer $status
 * @property string $client_name
 * @property string $address
 * @property string $footer
 * @property integer $sapvid
 * @property integer $admissionid
 * @property string $quarterid // ISPC-2461 
 * @property integer $isdelete
 * @property integer $isarchived
 * @property integer $record_id
 * @property integer $storno
 * @property timestamp $completed_date
 * @property timestamp $create_date
 * @property integer $create_user
 * @property timestamp $change_date
 * @property integer $change_user
 * 
 * @package    ISPC
 * @subpackage Application (2018-06-19)
 * @author     Ancuta <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseInvoiceSystem extends Pms_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('invoice_system');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('invoice_type', 'enum', 20, array(
             'type' => 'enum',
             'length' => 20,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'bw_sapv_invoice_new',
              1 => 'bw_medipumps_invoice',
              2 => 'bayern_sapv_invoice',
              3 => 'sh_invoice',
              4 => 'hospiz_invoice',
              5 => 'rlp_invoice',
              6 => 'bre_kinder_invoice',
              7 => 'nr_invoice',//ISPC-2286
              8 => 'demstepcare_invoice',//ISPC-2461              
              9 => 'demstepcare_internal_invoice',//ISPC-2585 Ancuta 15.06.2020
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('invoice_start', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('invoice_end', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('start_active', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('end_active', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('start_sapv', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('end_sapv', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('sapv_approve_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('sapv_approve_nr', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ipid', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('client', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        //ISPC-2585 Ancuta 15.06.2020
        $this->hasColumn('userid', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('external_invoice_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        // -- 
        $this->hasColumn('prefix', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('invoice_number', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('invoice_total', 'decimal', 11, array(
             'type' => 'decimal',
             'length' => 11,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'scale' => '2',
             ));
        $this->hasColumn('paid_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('client_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('address', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('footer', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('sapvid', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('admissionid', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        
        $this->hasColumn('quarterid', 'string', 15, array(
             'type' => 'string',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        
        $this->hasColumn('isdelete', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('isarchived', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('record_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('storno', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('completed_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        
        //ISPC-2747 Lore 26.11.2020
        $this->hasColumn('show_boxes', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('custom_invoice', 'string', 255, array('type' => 'string', 'length' => 255));
        
        $this->hasColumn('first_name', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('last_name', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('birthdate', 'date', NULL, array('type' => 'date', 'length' => NULL));
        $this->hasColumn('patient_care', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('insurance_no', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('debtor_number', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('ppun', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('paycenter', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('street', 'string', 255, array('type' => 'string', 'length' => 255));
    }

    public function setUp()
    {
        parent::setUp();
        
        $this->actAs(new Timestamp());
        
//         $this->actAs(new Softdelete());
    }
}