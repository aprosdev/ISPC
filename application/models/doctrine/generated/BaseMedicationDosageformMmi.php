<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MedicationDosageformMmi', 'SYSDAT');

/**
 * BaseMedicationDosageformMmi
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $dosageform_catalogid
 * @property string $dosageform_code
 * @property string $dosageform_name
 * @property integer $isdelete
 * @property integer $create_user
 * @property timestamp $create_date
 * @property integer $change_user
 * @property timestamp $change_date
 * 
 * @package    ISPC
 * @subpackage Application (2020-04-03) ISPC-2554 pct.1
 * @author     carmen <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMedicationDosageformMmi extends Pms_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('medication_dosageform_mmi');
        $this->option('type', 'INNODB');

        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('dosageform_catalogid', 'integer', 4, array(
        		'type' => 'integer',
        		'length' => 4,
        		'fixed' => false,
        		'unsigned' => false,
        		'primary' => false,
        		'autoincrement' => false,
        ));
        $this->hasColumn('dosageform_code', 'string', 255, array(
        		'type' => 'string',
        		'length' => 255,
        		'fixed' => false,
        		'unsigned' => false,
        		'primary' => false,
        		'notnull' => true,
        		'autoincrement' => false,
        ));
        $this->hasColumn('dosageform_name', 'string', 255, array(
        		'type' => 'string',
        		'length' => 255,
        		'fixed' => false,
        		'unsigned' => false,
        		'primary' => false,
        		'notnull' => true,
        		'autoincrement' => false,
        ));
        
        $this->index('id', array(
            'fields' => array('id'),
            'primary' => true
        ));
        
        $this->index('isdelete', array(
             'fields' => 
             array(
              0 => 'isdelete',
             ),
        ));
        $this->index('dosageform_code', array(
             'fields' => 
             array(
              0 => 'dosageform_code',
             ),
        ));
        $this->index('dosageform_name', array(
        		'fields' =>
        		array(
        				0 => 'dosageform_name',
        		),
        ));
        
    }

    public function setUp()
    {
        parent::setUp();
        
        $this->actAs(new Timestamp());
        
        $this->actAs(new Softdelete());
        
    }
}