<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MedicationsSetsItemsDosage', 'MDAT');

/**
 * ISPC-2247 pct.1 Lore 05.05.2020
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $bid_id
 * @property integer $medication_id
 * @property string $dosage
 * @property string $dosage_time_interval
 * @property integer $isdelete
 * @property integer $create_user
 * @property timestamp $create_date
 * @property integer $change_user
 * @property timestamp $change_date
 * 
 * @package    ISPC
 * @subpackage Application (2020-05-05) ISPC-2247
 * @author     Lore <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMedicationsSetsItemsDosage extends Pms_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('medications_sets_items_dosage');
        $this->option('type', 'INNODB');

        $this->hasColumn('id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));       
        $this->hasColumn('bid_id', 'integer', 11, array(
        		'type' => 'integer',
        		'length' => 11,
        		'fixed' => false,
        		'unsigned' => false,
        		'primary' => false,
        		'autoincrement' => false,
        ));
        $this->hasColumn('medication_id', 'integer', 11, array(
        		'type' => 'integer',
        		'length' => 4,
        		'fixed' => false,
        		'unsigned' => false,
        		'primary' => false,
        		'autoincrement' => false,
        ));
        $this->hasColumn('dosage', 'string', 255, array(
        		'type' => 'string',
        		'length' => 255,
        		'fixed' => false,
        		'unsigned' => false,
        		'primary' => false,
        		'notnull' => true,
        		'autoincrement' => false,
        ));
        $this->hasColumn('dosage_time_interval', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => true,
            'autoincrement' => false,
        ));

        
    }

    public function setUp()
    {
        parent::setUp();

        $this->hasOne('MedicationsSetsItems', array(
            'local' => 'medication_id',
            'foreign' => 'medication_id'
        ));
        
/*         $this->hasOne('MedicationsSetsList', array(
            'local' => 'bid_id',
            'foreign' => 'id'
        ));
        
        
         */
        
        $this->actAs(new Timestamp());
        
        $this->actAs(new Softdelete());
        
    }
}