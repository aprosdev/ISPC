<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OrganicEntriesExitsExtrafields', 'SYSDAT');

/**
 * BaseOrganicEntriesExitsExtrafields
 *#ISPC-2512PatientCharts
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $id 
 * @property integer $organic_id
 * @property string $organic_option 
 * @property string $organic_extrafield 
 * @property integer $isdelete
 * @property integer $create_user
 * @property timestamp $create_date
 * @property integer $change_user
 * @property timestamp $change_date
 * 
 * @package    ISPC
 * @subpackage Application (2020-04-14) ISPC-2518+ISPC-2520
 * @author     Carmen <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
 
abstract class BaseOrganicEntriesExitsExtrafields extends Pms_DoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('organic_entries_exits_extrafields');
        
        $this->hasColumn('id', 'integer', 4, array(
            'type' => 'integer',
            'length' => 11,
            'fixed' => false,
            'unsigned' => false,
            'primary' => true,
            'autoincrement' => true,
        ));
        $this->hasColumn('organic_id', 'integer', 8, array(
        		'type' => 'integer',
        		'length' => 8,
        		'fixed' => false,
        		'unsigned' => false,
        		'primary' => false,
        		'notnull' => false,
        		'autoincrement' => false,
        ));
        $this->hasColumn('organic_option', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => true,
            'autoincrement' => false,
        ));
        
        
        $this->hasColumn('organic_extrafield', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => true,
            'autoincrement' => false,
        ));
        
        $this->index('id', array(
        		'fields' => array('id'),
        		'primary' => true
        ));
        
        $this->index('isdelete', array(
        		'fields' =>
        		array(
        				0 => 'isdelete',
        		),
        ));
        $this->index('organic_id', array(
        		'fields' =>
        		array(
        				0 => 'organic_id',
        		),
        ));
        

    }

    public function setUp()
    {
        parent::setUp();
        
        $this->actAs(new Timestamp());
        
        
        $this->actAs(new Softdelete());
        
        
    }
}
