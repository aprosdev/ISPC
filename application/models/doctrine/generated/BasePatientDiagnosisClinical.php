<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PatientDiagnosisClinical', 'MDAT');

/**
 * BasePatientDiagnosisClinical
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $patient_diagnosis_id
 * @property integer $parent_id
 * @property string $ipid
 * @property enum $main_category
 * @property string $secondary_category
 * @property enum $relevant2admission
 * @property timestamp $start_date
 * @property timestamp $end_date
 * @property integer $change_user
 * @property timestamp $create_date
 * @property integer $create_user
 * @property timestamp $change_date
 * 
 * @package    ISPC
 * @subpackage Application (2020-10-07)
 * @author     Ancuta <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 * ISPC-2654 Ancuta 07.10.2020
 */
abstract class BasePatientDiagnosisClinical extends Pms_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('patient_diagnosis_clinical');

        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('patient_diagnosis_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'comment' => 'id from patient diagnosis',
             ));
        $this->hasColumn('parent_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'comment' => 'id from this table',
             ));
        $this->hasColumn('ipid', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('main_category', 'enum', 17, array(
             'type' => 'enum',
             'length' => 17,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'main_diagnosis',
              1 => 'primary_disease',
              2 => 'secondary_disease',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        
        $this->hasColumn('symptoms', 'enum', 3, array(
            'type' => 'enum',
            'length' => 3,
            'fixed' => false,
            'unsigned' => false,
            'values' =>
            array(
                0 => 'yes',
                1 => 'no',
            ),
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
        ));
        $this->hasColumn('archived', 'enum', 3, array(
            'type' => 'enum',
            'length' => 3,
            'fixed' => false,
            'unsigned' => false,
            'values' =>
            array(
                0 => 'yes',
                1 => 'no',
            ),
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
        ));
        $this->hasColumn('side_diagnosis', 'enum', 3, array(
            'type' => 'enum',
            'length' => 3,
            'fixed' => false,
            'unsigned' => false,
            'values' =>
            array(
                0 => 'yes',
                1 => 'no',
            ),
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
        ));
        $this->hasColumn('relevant2hospitalstay ', 'enum', 3, array(
            'type' => 'enum',
            'length' => 3,
            'fixed' => false,
            'unsigned' => false,
            'values' =>
            array(
                0 => 'yes',
                1 => 'no',
            ),
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
        ));
        $this->hasColumn('relevant2admission', 'enum', 3, array(
             'type' => 'enum',
             'length' => 3,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'yes',
              1 => 'no',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('start_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('end_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('change_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('create_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('create_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('change_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));


        $this->index('ipid', array(
             'fields' => 
             array(
              0 => 'ipid',
             ),
             ));
        $this->index('change_user', array(
             'fields' => 
             array(
              0 => 'change_user',
             ),
             ));
        $this->index('create_user', array(
             'fields' => 
             array(
              0 => 'create_user',
             ),
             ));
    }    
            

    public function setUp()
    {
        parent::setUp();
        /*
         *  auto-added by builder
         */
        $this->hasOne('PatientDiagnosis', array(
            'local' => 'patient_diagnosis_id',
            'foreign' => 'id',
        ));
        
        $this->actAs(new Timestamp());
    }
}