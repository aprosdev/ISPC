<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PatientFeedbackMedication', 'MDAT');

/**
 * BasePatientFeedbackMedication
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $ipid
 * @property enum $nationwide_medicationplan
 * @property enum $knows_medication
 * @property enum $takes_regularly
 * @property enum $takes_regularly_no
 * @property enum $dosage_intake
 * @property enum $dosage_intake_helper
 * @property enum $dosage_intake_help
 * @property enum $rate_medication
 * @property enum $takes_sleep_medication
 * @property enum $sleep_medication_in_module
 * @property enum $intake_sametime
 * @property enum $intake_with_water
 * @property string $intake_with_water_freetext
 * @property enum $intake_with_meals
 * @property enum $intake_device
 * @property string $intake_device_frequency
 * @property set $intake_device_yes
 * @property string $intake_device_freetext
 * @property set $diary
 * @property string $diary_freetext
 * @property integer $isdelete
 * @property integer $create_user
 * @property timestamp $create_date
 * @property integer $change_user
 * @property timestamp $change_date
 * 
 * @package    ISPC
 * @subpackage Application (2018-12-11)
 * @author     claudiu <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePatientFeedbackMedication extends Pms_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('patient_feedback_medication');

        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('ipid', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('nationwide_medicationplan', 'enum', 11, array(
             'type' => 'enum',
             'length' => 11,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'no',
              1 => 'yes',
              2 => 'requirement',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'Liegt der bundeseinheitliche Medikationsplan vor?',
             ));
        $this->hasColumn('knows_medication', 'enum', 3, array(
             'type' => 'enum',
             'length' => 3,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'no',
              1 => 'yes',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'Wissen Sie warum Sie welche Medikamente nehmen?',
             ));
        $this->hasColumn('takes_regularly', 'enum', 3, array(
             'type' => 'enum',
             'length' => 3,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'no',
              1 => 'yes',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'Nehmen Sie Ihre Medikamente regelm��ig ein?',
             ));
        $this->hasColumn('takes_regularly_no', 'enum', 35, array(
             'type' => 'enum',
             'length' => 35,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'Forget taking',
              1 => 'Ignorance to the medication',
              2 => 'no meaningfulness of the medication',
              3 => 'Worry about side effects',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('dosage_intake', 'enum', 3, array(
             'type' => 'enum',
             'length' => 3,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'no',
              1 => 'yes',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'comment' => 'Dosierung und Einnahme erfolgen selbst�ndig?',
             ));
        $this->hasColumn('dosage_intake_helper', 'enum', 21, array(
             'type' => 'enum',
             'length' => 21,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'Members and relatives',
              1 => 'nursing',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'comment' => 'Hilfe soll erfolgen durch',
             ));
        $this->hasColumn('dosage_intake_help', 'enum', 28, array(
             'type' => 'enum',
             'length' => 28,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'when putting',
              1 => 'when ingested',
              2 => 'when putting and taking',
              3 => 'injections',
              4 => 'regular measuring techniques',
              5 => 'Bandage and wound care',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'comment' => 'Hilfe ist erforderlich:',
             ));
        $this->hasColumn('rate_medication', 'enum', 17, array(
             'type' => 'enum',
             'length' => 17,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'Effective',
              1 => 'many side effects',
              2 => 'ineffective',
              3 => 'no assessment',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'Wie sch�tzen Sie Ihre Medikation ein?',
             ));
        $this->hasColumn('takes_sleep_medication', 'enum', 3, array(
             'type' => 'enum',
             'length' => 3,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'no',
              1 => 'yes',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'Nehmen Sie regelm��ig Medikamente zum Schlafen ein?',
             ));
        $this->hasColumn('sleep_medication_in_module', 'enum', 3, array(
             'type' => 'enum',
             'length' => 3,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'no',
              1 => 'yes',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'Ist das Medikament im Medikations-Modul eingetragen?',
             ));
        $this->hasColumn('intake_sametime', 'enum', 3, array(
             'type' => 'enum',
             'length' => 3,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'no',
              1 => 'yes',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'comment' => 'Immer zum selben Zeitpunkt',
             ));
        $this->hasColumn('intake_with_water', 'enum', 3, array(
             'type' => 'enum',
             'length' => 3,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'no',
              1 => 'yes',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'Mit Leitungswasser',
             ));
        $this->hasColumn('intake_with_water_freetext', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'Nein, sondern mit:',
             ));
        $this->hasColumn('intake_with_meals', 'enum', 3, array(
             'type' => 'enum',
             'length' => 3,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'no',
              1 => 'yes',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'Zu den Mahlzeiten',
             ));
        $this->hasColumn('intake_device', 'enum', 3, array(
             'type' => 'enum',
             'length' => 3,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'no',
              1 => 'yes',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'Gesicherte Anwendung von devices (Einhalten therapie- oder krankheitsbedingter Verhaltensvorschriften)',
             ));
        $this->hasColumn('intake_device_frequency', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('intake_device_yes', 'set', 22, array(
             'type' => 'set',
             'length' => 22,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'inhaler',
              1 => 'injections',
              2 => 'measurement techniques',
              3 => 'wound care',
              4 => 'miscellaneous',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('intake_device_freetext', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('diary', 'set', 13, array(
             'type' => 'set',
             'length' => 13,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'BZ',
              1 => 'RR',
              2 => 'O2',
              3 => 'Pain diary',
              4 => 'miscellaneous',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('diary_freetext', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('isdelete', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'comment' => '1=deleted',
             ));
        $this->hasColumn('create_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('create_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('change_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('change_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));


        $this->index('ipid', array(
             'fields' => 
             array(
              0 => 'ipid',
             ),
             ));
        $this->index('isdelete', array(
             'fields' => 
             array(
              0 => 'isdelete',
             ),
             ));
    }    
            

    public function setUp()
    {
        parent::setUp();
        
    }
}