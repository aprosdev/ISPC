<?php

// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PatientReadmissionDetails', 'IDAT');

/**
 *  
 * This class has been auto-generated by the Doctrine ORM Framework
 *#ISPC-2512PatientCharts
 * @property integer $id 
 * @property string $ipid
 * @property integer $readmission_id
 * @property enum $admission_type 
 * @property string $admission_reason 
 * @property integer $isdelete
 * @property integer $create_user
 * @property timestamp $create_date
 * @property integer $change_user
 * @property timestamp $change_date
 * 
 * @package    ISPC
 * @subpackage Application (2020-04-13) ISPC-2513
 * @author     Lore <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */


abstract class BasePatientReadmissionDetails extends Pms_Doctrine_Record
{

    function setTableDefinition()
    {
        $this->setTableName('patient_readmission_details');
        
        $this->hasColumn('id', 'int', 11, array(
            'type' => 'int',
            'length' => 11,
            'primary' => true,
            'autoincrement' => true
        ));
        $this->hasColumn('ipid', 'string', 255, array(
            'type' => 'string',
            'length' => 255
        ));
        $this->hasColumn('readmission_id', 'int', 11, array(
            'type' => 'int',
            'length' => 11
        ));        
  
         $this->hasColumn('admission_type', 'enum', 255, array(
            'type' => 'enum',
            'length' => 255,
            'fixed' => false,
            'unsigned' => false,
            'values' =>
            array(
                0 => 'planned',
                1 => 'unplanned',
            ),
            'primary' => false,
            'notnull' => true,
            'autoincrement' => false,
        ));
        
        $this->hasColumn('admission_reason', 'string', 255, array(
            'type' => 'string',
            'length' => 255
        ));
        
    }

    public function setUp()
    {
        parent::setUp();
        
        $this->actAs(new Timestamp());
        
        
        $this->actAs(new Softdelete());
        
        /*
         $this->hasOne('PatientReadmission as ParentPatientReadmission', array(
         'local' => 'id',
         'foreign' => 'id'
         ));
         */
        
    }
    

}

?>
