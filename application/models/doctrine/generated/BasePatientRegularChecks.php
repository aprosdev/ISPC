<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PatientRegularChecks', 'IDAT');

/**
 * BasePatientRegularChecks
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $ipid
 * @property enum $family_treatment
 * @property string $family_treatment_yes
 * @property set $family_treatment_no
 * @property string $family_treatment_freetext
 * @property enum $specialist_care
 * @property set $specialist_care_yes
 * @property enum $specialist_care_no
 * @property string $specialist_care_freetext
 * @property enum $lastyear_checkup
 * @property set $lastyear_checkup_yes
 * @property blob $hospitalizations
 * @property integer $isdelete
 * @property integer $create_user
 * @property timestamp $create_date
 * @property integer $change_user
 * @property timestamp $change_date
 * 
 * @package    ISPC
 * @subpackage Application (2018-12-10)
 * @author     claudiu <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePatientRegularChecks extends Pms_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('patient_regular_checks');

        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('ipid', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('family_treatment', 'enum', 3, array(
             'type' => 'enum',
             'length' => 3,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'no',
              1 => 'yes',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'Stehen Sie in regelm��iger haus�rztlicher Behandlung?',
             ));
        $this->hasColumn('family_treatment_yes', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'H�ufigkeit der Hausarztkontakte pro Monat oder Jahr',
             ));
        $this->hasColumn('family_treatment_no', 'set', 36, array(
             'type' => 'set',
             'length' => 36,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'no need',
              1 => 'too cumbersome with reduced mobility',
              2 => 'miscellaneous',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('family_treatment_freetext', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('specialist_care', 'enum', 3, array(
             'type' => 'enum',
             'length' => 3,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'no',
              1 => 'yes',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'Stehen Sie in regelm��iger fach�rztlicher Behandlung',
             ));
        $this->hasColumn('specialist_care_yes', 'set', 13, array(
             'type' => 'set',
             'length' => 13,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'diabetologist',
              1 => 'neurologist',
              2 => 'orthopedist',
              3 => 'gynecologist',
              4 => 'urologist',
              5 => 'dentist',
              6 => 'miscellaneous',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('specialist_care_no', 'enum', 36, array(
             'type' => 'enum',
             'length' => 36,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'no need',
              1 => 'too cumbersome with reduced mobility',
              2 => 'only wants domestic care',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('specialist_care_freetext', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('lastyear_checkup', 'enum', 3, array(
             'type' => 'enum',
             'length' => 3,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'no',
              1 => 'yes',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'Waren Sie im letzten Jahr bei einer Vorsorgeuntersuchung',
             ));
        $this->hasColumn('lastyear_checkup_yes', 'set', 27, array(
             'type' => 'set',
             'length' => 27,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'Health check',
              1 => 'Dental checkups',
              2 => 'vaccinations',
              3 => 'gynecological check',
              4 => 'Examination of the breast',
              5 => 'Mammography screening',
              6 => 'Examination of the prostate',
              7 => 'Skin Cancer Screening',
              8 => 'faecal occult',
              9 => 'colonoscopy',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('hospitalizations', 'object', null, array(
             'type' => 'object',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'Krankenhausaufenthalte',
             ));
        $this->hasColumn('isdelete', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'comment' => '1=deleted',
             ));
        $this->hasColumn('create_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('create_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('change_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('change_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));


        $this->index('ipid', array(
             'fields' => 
             array(
              0 => 'ipid',
             ),
             ));
        $this->index('isdelete', array(
             'fields' => 
             array(
              0 => 'isdelete',
             ),
             ));
    }    
            

    public function setUp()
    {
        parent::setUp();
        
    }
}