<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ShShiftsInternalInvoice', 'SYSDAT');

/**
 * BaseShShiftsInternalInvoice
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property enum $user_type
 * @property string $user
 * @property string $ipid
 * @property timestamp $invoice_start
 * @property timestamp $invoice_end
 * @property timestamp $start_active
 * @property timestamp $end_active
 * @property timestamp $invoiced_month
 * @property integer $client
 * @property string $prefix
 * @property integer $invoice_number
 * @property decimal $invoice_total
 * @property timestamp $paid_date
 * @property integer $status
 * @property string $client_name
 * @property string $recipient
 * @property string $comment
 * @property integer $isdelete
 * @property integer $isarchived
 * @property integer $record_id
 * @property integer $storno
 * @property timestamp $completed_date
 * @property timestamp $create_date
 * @property integer $create_user
 * @property timestamp $change_date
 * @property integer $change_user
 * 
 * @package    ISPC
 * @subpackage Application (2018-10-14)
 * @author     Ancuta <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseShShiftsInternalInvoice extends Pms_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('sh_shifts_internal_invoice');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('user_type', 'enum', 14, array(
             'type' => 'enum',
             'length' => 14,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'system_user',
              1 => 'familly_doctor',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('user', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ipid', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('invoice_start', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('invoice_end', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('start_active', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('end_active', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('invoiced_month', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('client', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('prefix', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('invoice_number', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('invoice_total', 'decimal', 11, array(
             'type' => 'decimal',
             'length' => 11,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'scale' => '2',
             ));
        $this->hasColumn('paid_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('client_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('recipient', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('comment', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('isdelete', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('isarchived', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('record_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('storno', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('completed_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('create_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('create_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('change_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('change_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        //ISPC-2747 Lore 26.11.2020
        $this->hasColumn('show_boxes', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('custom_invoice', 'string', 255, array('type' => 'string', 'length' => 255));
        
        $this->hasColumn('start_sapv', 'datetime', NULL, array('type' => 'datetime', 'length' => NULL));
        $this->hasColumn('end_sapv', 'datetime', NULL, array('type' => 'datetime', 'length' => NULL));
        $this->hasColumn('sapv_approve_date', 'datetime', NULL, array('type' => 'datetime', 'length' => NULL));
        $this->hasColumn('sapv_approve_nr', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('first_name', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('last_name', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('birthdate', 'date', NULL, array('type' => 'date', 'length' => NULL));
        $this->hasColumn('patient_care', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('insurance_no', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('debtor_number', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('ppun', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('paycenter', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('street', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('footer', 'string', 255, array('type' => 'string', 'length' => 255));
        
    }

    public function setUp()
    {
        parent::setUp();
        //ISPC-2428 Ancuta 16.03.2020
        $this->hasMany('ShShiftsInternalInvoiceItems', array(
            'local' => 'id',
            'foreign' => 'invoice'
        ));
        // --
        
        $this->actAs(new Timestamp());
        
//         $this->actAs(new Softdelete());
        
    }
}