<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('StudypoolLetterSettings', 'SYSDAT');

/**
 * BaseStudypoolLetterSettings
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $clientid
 * @property enum $status
 * @property blob $survey_url
 * @property integer $survey_when
 * @property blob $email_subject
 * @property blob $email_body
 * @property integer $template_id
 * @property string $specified_user
 * @property integer $isdelete
 * @property integer $create_user
 * @property timestamp $create_date
 * @property timestamp $change_date
 * @property integer $change_user
 * 
 * @package    ISPC
 * @subpackage Application (2017-08-11)
 * @author     claudiu <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStudypoolLetterSettings extends Doctrine_Record
{
	public function setTableDefinition()
	{
		$this->setTableName('studypool_letter_settings');
		$this->hasColumn('id', 'integer', 4, array(
				'type' => 'integer',
				'length' => 4,
				'fixed' => false,
				'unsigned' => false,
				'primary' => true,
				'autoincrement' => true,
		));
		$this->hasColumn('clientid', 'integer', 4, array(
				'type' => 'integer',
				'length' => 4,
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => true,
				'autoincrement' => false,
		));
		$this->hasColumn('status', 'enum', 8, array(
				'type' => 'enum',
				'length' => 8,
				'fixed' => false,
				'unsigned' => false,
				'values' =>
				array(
						0 => 'disabled',
						1 => 'enabled',
				),
				'primary' => false,
				'default' => 'disabled',
				'notnull' => true,
				'autoincrement' => false,
		));
		$this->hasColumn('survey_url', 'blob', null, array(
				'type' => 'blob',
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => false,
				'autoincrement' => false,
				'comments' => 'survey link in client details',
		));
		$this->hasColumn('survey_when', 'integer', 1, array(
				'type' => 'integer',
				'length' => 1,
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => false,
				'autoincrement' => false,
				'comments' => 'when: give a text field in survey settings to define the ammount of DAYS after the discharge of a patient',
		));
		$this->hasColumn('email_subject', 'blob', null, array(
				'type' => 'blob',
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => false,
				'autoincrement' => false,
		));
		$this->hasColumn('email_body', 'blob', null, array(
				'type' => 'blob',
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => false,
				'autoincrement' => false,
		));
		$this->hasColumn('template_id', 'integer', 4, array(
				'type' => 'integer',
				'length' => 4,
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => false,
				'autoincrement' => false,
				'comments' => 'docx_templates id',
		));
		$this->hasColumn('specified_user', 'string', 255, array(
				'type' => 'string',
				'length' => 255,
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => false,
				'autoincrement' => false,
		));
		/*
		$this->hasColumn('isdelete', 'integer', 4, array(
				'type' => 'integer',
				'length' => 4,
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'default' => '0',
				'notnull' => true,
				'autoincrement' => false,
		));
		$this->hasColumn('create_user', 'integer', 8, array(
				'type' => 'integer',
				'length' => 8,
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => true,
				'autoincrement' => false,
		));
		$this->hasColumn('create_date', 'timestamp', null, array(
				'type' => 'timestamp',
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => true,
				'autoincrement' => false,
		));
		$this->hasColumn('change_date', 'timestamp', null, array(
				'type' => 'timestamp',
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => false,
				'autoincrement' => false,
		));
		$this->hasColumn('change_user', 'integer', 8, array(
				'type' => 'integer',
				'length' => 8,
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => false,
				'autoincrement' => false,
		));
		*/
		$this->index('id', array(
				'fields' => array('id'),
				'primary' => true
		));
		$this->index('idx_clientid_isdelete', array(
				'fields' => array('clientid', 'isdelete')
		));
	}

    public function setUp()
    {
        parent::setUp();
        
        $this->hasOne('DocxTemplates', array(
				'local' => 'template_id',
				'foreign' => 'id'
		));
        
        $this->actAs(new Timestamp());
        
        $this->actAs(new Softdelete());    

        $this->actAs(new SoftEncrypt(array(
        		'survey_url',
        		'email_subject',
        		'email_body'
        )));  

        $this->actAs(new SoftDecrypt(array(
        		'survey_url',
        		'email_subject',
        		'email_body'
        )));
    }
}