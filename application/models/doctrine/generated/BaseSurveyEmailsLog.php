<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SurveyEmailsLog', 'SYSDAT');

/**
 * BaseSurveyEmailsLog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $clientid
 * @property integer $sender
 * @property integer $parent_table
 * @property integer $recipient
 * @property timestamp $date
 * @property blob $email_subject
 * @property blob $email_body
 * @property integer $attachment_id
 * @property integer $batch_id
 * @property integer $isdelete
 * @property timestamp $create_date
 * @property integer $create_user
 * @property timestamp $change_date
 * @property integer $change_user
 * 
 * @package    ISPC
 * @subpackage Application (2019-08-21)
 * @author     carmen <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 * ISPC-2411
 */
abstract class BaseSurveyEmailsLog extends Doctrine_Record
{
	public function setTableDefinition()
	{
		$this->setTableName('survey_emails_log');
		$this->hasColumn('id', 'integer', 8, array(
				'type' => 'integer',
				'length' => 8,
				'fixed' => false,
				'unsigned' => false,
				'primary' => true,
				'autoincrement' => true,
		));
		$this->hasColumn('clientid', 'integer', 8, array(
				'type' => 'integer',
				'length' => 8,
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => true,
				'autoincrement' => false,
		));
		$this->hasColumn('sender', 'integer', 8, array(
				'type' => 'integer',
				'length' => 8,
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => true,
				'autoincrement' => false,
		));
		$this->hasColumn('parent_table', 'enum', 8, array(
				'type' => 'enum',
				'length' => 8,
				'fixed' => false,
				'unsigned' => false,
				'values' =>
				array(
						0 => 'PatientMaster',
						1 => 'ContactPersonMaster',
				),
				'primary' => false,
				'default' => NULL,
				'notnull' => true,
				'autoincrement' => false,
		));
		$this->hasColumn('recipient', 'integer', 8, array(
				'type' => 'integer',
				'length' => 8,
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => true,
				'autoincrement' => false,
		));
		$this->hasColumn('date', 'timestamp', null, array(
				'type' => 'timestamp',
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => true,
				'autoincrement' => false,
		));
		$this->hasColumn('email_subject', 'blob', null, array(
				'type' => 'blob',
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => false,
				'autoincrement' => false,
		));
		$this->hasColumn('email_body', 'blob', null, array(
				'type' => 'blob',
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'notnull' => false,
				'autoincrement' => false,
		));
		$this->hasColumn('batch_id', 'integer', 4, array(
				'type' => 'integer',
				'length' => 4,
				'fixed' => false,
				'unsigned' => false,
				'primary' => false,
				'default' => '0',
				'notnull' => true,
				'autoincrement' => false,
		));
		
		$this->index('id', array(
				'fields' => array('id'),
				'primary' => true
		));
		$this->index('idx_clientid', array(
				'fields' => array('clientid')
		));
		$this->index('idx_sender', array(
				'fields' => array('sender')
		));
		$this->index('idx_recipient', array(
				'fields' => array('recipient')
		));

	}

    public function setUp()
    {
        parent::setUp();
        
        $this->actAs(new Timestamp());
        
        $this->actAs(new Softdelete());   //do not delete any logs 

        $this->actAs(new SoftEncrypt(array(
        		'email_subject',
        		'email_body'
        )));    
        
        $this->actAs(new SoftDecrypt(array(
        		'email_subject',
        		'email_body'
        )));
    }
}