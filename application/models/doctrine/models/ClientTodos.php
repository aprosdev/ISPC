<?php

/**
 * ClientTodos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ISPC
 * ISPC-2491 
 * @subpackage Application (2019-11-29)
 * @author     Ancuta <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class ClientTodos extends BaseClientTodos
{            
    /**
     * translations are grouped into an array
     * @var unknown
     */
    const LANGUAGE_ARRAY    = 'clienttodos_lang';
            
    /**
     * define the FORMID and FORMNAME, if you want to piggyback some triggers
     * @var unknown
     */
    const TRIGGER_FORMID    = null;
    const TRIGGER_FORMNAME  = 'frm_clienttodos';
            
    /**
     * insert into patient_files will use this
     */
    const PATIENT_FILE_TABNAME  = 'ClientTodos';
    const PATIENT_FILE_TITLE    = 'ClientTodos PDF'; //this will be translated
            
    /**
     * insert into patient_course will use this
     */
    const PATIENT_COURSE_TITLE      = 'ClientTodos PDF was created';
    const PATIENT_COURSE_TABNAME    = 'clienttodos';
    const PATIENT_COURSE_TYPE       = ''; // add letter

    
    /**
     * @author Ancuta
     * ISPC-2491 29.11.2019
     * @param number $clientid
     * @param unknown $ipids
     * @param string $triggered_by
     */
    public function send_client_todos($clientid = 0, $ipids = array(), $triggered_by = "patient_admission", $isstandby){
        
        if(empty($clientid) || empty($ipids)){
            return;
        }
        
        $all_client_todos = array();
        $all_client_todos= Doctrine_Query::create()
        ->select('*')
        ->from('ClientTodos')
        ->where('isdelete = 0')
        ->andWhere('clientid = ?',$clientid)
        ->andWhere('triggered_by = ?',$triggered_by)
        ->fetchArray();
       
        //TODO-3332 carmen 17.08.2020
        switch($isstandby)
        {
        	case '0':
        		foreach($all_client_todos as $kr => &$vr)
        		{
        			foreach($vr as $kc => $vc)
        			{
	        			if($kc == 'triggered_for' && $vc == 'standby')
	        			{
	        				unset($all_client_todos[$kr]);
	        			}
        			}
        		}
        		break;
        	default:
        		foreach($all_client_todos as $kr => &$vr)
        		{
        		foreach($vr as $kc => $vc)
        			{
	        			if($kc == 'triggered_for' && $vc == 'active')
	        			{
	        				unset($all_client_todos[$kr]);
	        			}
        			}
        		}
        		break;
        }
        //--
        
        if(empty($all_client_todos)){
            return;
        }
        
        $todos_array = array();
        $date = date('Y-m-d H:i:s');
        foreach($all_client_todos as $todo_row => $todo_data)
        {
            foreach($ipids as $ipid)
            {
                foreach($todo_data['todo_recipients'] as $k=>$info)
                {
                    if(substr($info,0,1) == 'g')
                    {
                        $todos_array[]  = array(
                            'client_id'=> $clientid,
                            'user_id'=> '0',
                            'group_id'=> substr($info,1),
                            'ipid'=> $ipid,
                            'todo'=> $todo_data['todo'],
                            'triggered_by'=> $triggered_by,
                            'until_date'=> $date,
                        );
                    }
                    elseif(substr($info,0,1) == 'u')
                    {
                        $todos_array[]  = array(
                            'client_id'=> $clientid,
                            'user_id'=> substr($info,1),
                            'group_id'=> '0',
                            'ipid'=> $ipid,
                            'todo'=> $todo_data['todo'],
                            'triggered_by'=> $triggered_by,
                            'until_date'=> $date,
                        );
                    }
                }
            }
            
        }
        
        if(!empty($todos_array)){
            $collection = new Doctrine_Collection('ToDos');
            $collection->fromArray($todos_array);
            $collection->save();
        }
        
    }
    
    
    /**
     * @author Ancuta
     * ISPC-2491
     * @param number $clientid
     * @param number $userid
     * @param number $ipid
     * @param string $triggered_by
     */
    public function send_statusChange_todos($clientid = 0, $userid = 0, $ipid = 0, $triggered_by = "patient_status_change")
    {
        if (empty($clientid) || empty($userid) || empty($ipid)) {
            return;
        }
        
        // get all koordinator users
        $coord_groups = array("6");
        $coord_groups_ids = Usergroup::get_clients_mastergroup_users($coord_groups, array($clientid));
        
        $coordinations_users_str = "";
        $coordinations_groups = array();
        
        $todos_recipients = array();
        foreach ($coord_groups_ids as $k_coord => $v_coord) {
            $todos_recipients['groups'][] = $v_coord['groupid'];
        }
        $todos_recipients['groups'] = array_unique($todos_recipients['groups']);
        
        // get all doctor users
        $doctor_groups = array("4");
        $doctor_users_data = Usergroup::get_clients_mastergroup_users($doctor_groups, array($clientid));
        
        $doctor_userids = array();
        foreach ($doctor_users_data as $k => $udata) {
            $doctor_userids[] = $udata['id'];
        }
        
        if (! empty($doctor_userids)) {
            
            $fdoc = Doctrine_Query::create()->select("*, e.epid, e.ipid")
                ->from('PatientQpaMapping q')
                ->where('e.ipid LIKE ? ', $ipid)
                ->andWhereIn("q.userid", $doctor_userids)
                ->andWhere('q.epid!=""');
            $fdoc->leftJoin('q.EpidIpidMapping e');
            $doc_assigned_patients = $fdoc->fetchArray();
            
            if (! empty($doc_assigned_patients)) {
                foreach ($doc_assigned_patients as $k => $assigned_docs) {
                    if ($assigned_docs['userid'] != "$userid") {
                        $todos_recipients['users'][] = $assigned_docs['userid'];
                    }
                }
                
                $todos_recipients['users'] = array_unique($todos_recipients['users']);
            }
        }
        
        // Get current user - data
        $user_obj = new User();
        $current_user_arr = $user_obj->getUserDetails($userid);
        if (! empty($current_user_arr)) {
            $current_user = $current_user_arr[0];
        }
        
        $todo_text = "%current_user_first_name %current_user_last_name hat das Versorgungsrisiko des Patienten geändert. Bitte im Zweifel Rücksprache halten.";
        $todo_text = str_replace('%current_user_first_name', $current_user['first_name'], $todo_text);
        $todo_text = str_replace('%current_user_last_name', $current_user['last_name'], $todo_text);
        
        $todos_array = array();
        $date = date('Y-m-d H:i:s');
        
        if (! empty($todos_recipients['groups'])) {
            foreach ($todos_recipients['groups'] as $k => $group_id) {
                $todos_array[] = array(
                    'client_id' => $clientid,
                    'user_id' => '0',
                    'group_id' => $group_id,
                    'ipid' => $ipid,
                    'todo' => $todo_text,
                    'triggered_by' => $triggered_by,
                    'until_date' => $date
                );
            }
        }
        if (! empty($todos_recipients['groups'])) {
            foreach ($todos_recipients['users'] as $k => $user_id) {
                $todos_array[] = array(
                    'client_id' => $clientid,
                    'user_id' => $user_id,
                    'group_id' => '0',
                    'ipid' => $ipid,
                    'todo' => $todo_text,
                    'triggered_by' => $triggered_by,
                    'until_date' => $date
                );
            }
        }
        
        if (! empty($todos_array)) {
            $collection = new Doctrine_Collection('ToDos');
            $collection->fromArray($todos_array);
            $collection->save();
            
            echo json_encode('Module-208, todos sent to assigned doctors and koordinators');
            exit();
        }
    }
}