<?php

/**
 * Hl7MessagesSent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ISPC
 * @subpackage Application (2019-02-05)
 * @author     claudiu <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Hl7MessagesSent extends BaseHl7MessagesSent
{            
    /**
     * translations are grouped into an array
     * @var unknown
     */
    const LANGUAGE_ARRAY    = 'hl7messagessent_lang';
            
    /**
     * define the FORMID and FORMNAME, if you want to piggyback some triggers
     * @var unknown
     */
    const TRIGGER_FORMID    = null;
    const TRIGGER_FORMNAME  = 'frm_hl7messagessent';
            
    /**
     * insert into patient_files will use this
     */
    const PATIENT_FILE_TABNAME  = 'Hl7MessagesSent';
    const PATIENT_FILE_TITLE    = 'Hl7MessagesSent PDF'; //this will be translated
            
    /**
     * insert into patient_course will use this
     */
    const PATIENT_COURSE_TITLE      = 'Hl7MessagesSent was created';
    const PATIENT_COURSE_TABNAME    = 'hl7messagessent';
    const PATIENT_COURSE_TYPE       = ''; // add letter

    
    /**
     * ISPC-2459 Ancuta 06.08.2020
     * @param unknown $client_id
     * @return void|array|mixed
     */
    public static function cronjob_hl7_sendActivation_messages($client_id)
    {
        if(empty($client_id)){
            return ;
        }
        // get all active patients today
        $pm_obj = new PatientMaster();
        $active_today = $pm_obj->get_today_hl7_activation_patients(array($client_id));

        if(empty($active_today)){
            return;
        }
        
        $special_date = date('Y-m-d');
        //$special_date = "2020-09-18";
        $requested_date =   date('Y-m-d',strtotime($special_date)); 
        $requested_date_Ymd = date('Ymd',strtotime($special_date)); 
        
        $active_ipids = array();
        $active_ipids = array_keys ($active_today);

        $current_admission_dates = array();
        $patient2client = array();
        foreach($active_today as $pipid=>$pdata){
            $patient2client[$pipid] = $pdata['EpidIpidMapping']['clientid'];
            $current_admission_dates[$pipid] = date('Y-m-d', strtotime($pdata['admission_date'])); 
        }
        
        
        // get received and processed messages for current day
        $proccesd_messages = Doctrine_Query::create()
        ->select('*,hl7_pm.ipid as ipid, AES_DECRYPT(message,"' . Zend_Registry::get('salt') . '") as message')
        ->from('Hl7MessagesReceived hl7_mr')
        ->leftJoin("hl7_mr.Hl7MessagesProcessed hl7_pm")
        ->whereIn("hl7_pm.ipid",$active_ipids)
        ->andWhere("hl7_pm.messages_processed_ID IS NOT NULL")
        ->orderBy('hl7_pm.create_date DESC')
        ->fetchArray( );
        
        //if no mesages received for this patient- then no messages to be sent 
        if(empty($proccesd_messages)){
            return;
        }

        // fore each patient that has at least one message received, get the LAST - order by date smaller then current 
        // we nned patient visits  for curent day 
        $pvn = PatientVisitnumberTable::getInstance()->createQuery('pvt')
        ->select("*")
        ->whereIn('ipid',$active_ipids)
        ->orderBy("admit_date ASC")
        ->andWhere('ignore_number <> 1 ') //TODO-3837 Ancuta 25.05.2021
        ->fetchArray();
        
        //get last admission date for 
        $current_pvns = array();
        foreach($pvn as $k=>$pv_data){
            // if pvisit admission date is between curent admission of patient and  current date  
            if( date('Y-m-d',strtotime($pv_data['admit_date'])) <= $requested_date)
            {
                $current_pvns[$pv_data['ipid']] =  $pv_data['visit_number'];
            }
        }

        $current_pvn2movment = array();
        $ipid_messages = array();
        foreach($proccesd_messages as $km => $row)
        {
            $message = new Net_HL7_Message(trim($row['message']));
            
            // ISPC-2459 New request - 10.12.2020
            //messages with "NP4000" shall NOT be sent back to the hospital
            //it is the create of a new Fall and causes errors.
            $evn = $message->getSegmentsByName("EVN");
            
            if (sizeof($evn) > 0)
            {
                $evn = $evn[0];
                $evn_code = $evn->getField(4);
                if(trim($evn_code) == 'NP4000'){
                    continue;
                }
            }
            // --
            
            $msgType = $message->getSegmentFieldAsString(0, 9); // Example: "ADT^A08"
            $msgDate = $message->getSegmentFieldAsString(0, 7);
            $proccesd_messages[$km]['MESSAGE_Date'] = $msgDate;
            
            $zbe = $message->getSegmentsByName("ZBE");

            
            if (sizeof($zbe) > 0)
            {
                $zbe = $zbe[0];
                $full_movement_number = $zbe->getField(1);
                $zdate = $zbe->getField(2);
                $zbe = $zbe->getField(4);
                $zbe_Date_full = $zdate;
                $zbe_Date = date('Y-m-d',strtotime($zdate));
                
                if($current_pvns[$row['ipid']] ==  substr($full_movement_number,0,-5)){
                    $current_pvn2movment[$row['ipid']][$zbe_Date] =  (int)substr($full_movement_number,-5);;
                }
                
                
                if($zbe_Date <=  $requested_date){
                    $proccesd_messages[$km]['activation_date'] = $requested_date;
                    $proccesd_messages[$km]['day'] = $requested_date_Ymd;
                    $proccesd_messages[$km]['zbe_Date'] = date('Y-m-d',strtotime($zdate));
                    $proccesd_messages[$km]['zbe_Date_full'] = $zbe_Date_full ;
                    $proccesd_messages[$km]['full_movement_number'] =$full_movement_number ;
                    $proccesd_messages[$km]['zbe_pvn'] = substr($full_movement_number,0,-5);
                    $proccesd_messages[$km]['movement_number'] = substr($full_movement_number,-5);
                    
                    $ipid_messages[$row['ipid']][] =$proccesd_messages[$km];
                }
            }
        }
        
        $patient_received_messages = array();
        foreach($ipid_messages as $pat_ipid => $zbe_details){
            usort($zbe_details, array(new Pms_Sorter('zbe_Date'), "_date_compare"));
            
            $patient_received_messages [$pat_ipid]  = $zbe_details;
        }
        

        $message2beSent = array();
        foreach($patient_received_messages as $ipid => $messages){
            foreach($messages as $k=>$minfo){
                if($minfo['zbe_Date'] == $requested_date){
                    $message2beSent[$ipid] = $minfo;
                    $message2beSent[$ipid]['current_movement_number'] = $minfo['movement_number'];
                    $message2beSent[$ipid]['has_new_movement_number'] = 0;// ISPC-2459 Comments From 05.11.2020  
                } else{
                    if($minfo['zbe_Date'] <= $requested_date ){
                        $older_messages[$ipid][] =$minfo;
                    }
                    usort(  $older_messages[$ipid], array(new Pms_Sorter('zbe_Date'), "_date_compare"));
                    $message2beSent[$ipid] = end($older_messages[$ipid]);
                    $message2beSent[$ipid]['current_movement_number'] = Client::get_movement_number($patient2client[$ipid],$ipid,$requested_date,$current_pvn2movment[$ipid]);
                    $message2beSent[$ipid]['has_new_movement_number'] = 1;// ISPC-2459 Comments From 05.11.2020  
                }
            }
        }
        
        // check thet there are no sent messages for the current date for ipid
        $send_messages = array();
        foreach($message2beSent as $ipid =>$message_row){
            
            $activation_day = "";
            //$activation_day = $message_row['day'] . "120000";
            $activation_day = $message_row['day'] . "000500";//ISPC-2459  Ancuta 25.09.2020, Comment Administrator: 25.09.2020 : it seems that the activation is sent for 12:00 noon. can we change that to 00:05 ?
            $item_day = date('Y-m-d',strtotime($activation_day));
            
            //If message was received for item date - then we have movment number so activaton can be sent
    
                // get message received  for item date
                $message_string ="";
                $message_lines_arr = array();
                $message_lines_arr = explode("\n",$message_row['message']);
                foreach($message_lines_arr as $line_id=>$line_Data){
                    if(empty($line_Data)){
                        unset($message_lines_arr[$line_id]);
                    }
                    
                    if(strpos($line_Data, 'ZBE') !== false ){
                        $zbe_line_id = $line_id;
                    }
                }
                
                
                // MSH line
                $message_lines_arr[0] = str_replace('ADT^A04','ADT^A08',$message_lines_arr[0]);
 
                $msh_array = explode('|',$message_lines_arr[0]);
                $msh_array[4]=$msh_array[2];
                $msh_array[5]=$msh_array[3];
                $msh_array[2] = "";
                $msh_array[3] = "";
                // ---
                
                $message_lines_arr[0]  = implode("|",$msh_array);
                //EVN line
                $message_lines_arr[1] = str_replace('A04','A08',$message_lines_arr[1]);
                $message_lines_arr[1] = str_replace('NP41P0','NP41I0',$message_lines_arr[1]);
                //ISPC-2459 comment from 03.11.2020
                $message_lines_arr[1] = str_replace('NP42P0','NP42I0',$message_lines_arr[1]);
                //-- 
                $evn_line_items = array();
                $evn_line_items = explode("|",$message_lines_arr[1]);
                $message_lines_arr[1] = str_replace($evn_line_items[6],$activation_day,$message_lines_arr[1]);
                //  if the movement is new - we should always send NP41I0  // ISPC-2459 Comments From 05.11.2020  
                if($message_row['has_new_movement_number'] == '1'){
                    $message_lines_arr[1] = str_replace($evn_line_items[4],"NP41I0",$message_lines_arr[1]); //just want to be sure, that we send for the "90.000" movement number a NP41I0 type.
                }
                
                
                
                // ZBEline :: FOR ACTIVATION 
                $zbe_line = $message_lines_arr[$zbe_line_id ];
                $zbe_line_arr = explode('|',$zbe_line);
                $zbe_existing_date = $zbe_line_arr[2];
                $new_date = $activation_day;
                $zbe_existing_movement_number = $zbe_line_arr[1];
                $new_movment_nr = $message_row['zbe_pvn'].''.str_pad($message_row['current_movement_number'], 5, "0", STR_PAD_LEFT);

                $message_lines_arr[$zbe_line_id] = str_replace($zbe_existing_date,$new_date,$message_lines_arr[$zbe_line_id]);
                $message_lines_arr[$zbe_line_id] = str_replace($zbe_existing_movement_number,$new_movment_nr,$message_lines_arr[$zbe_line_id]);
                
                $message_string =  implode("\n",$message_lines_arr);
                
                $message_string = str_replace("\r", '', $message_string);// Ancuta+Alex 12.05.2020

                $send_messages[$ipid]['day'] = $message_row['activation_date'] ;
                $send_messages[$ipid]['client'] = $patient2client[$ipid];
                $send_messages[$ipid]['msg'] = $message_string;
              
        }
        
//         print_r($send_messages);
//         exit;
        
        return $send_messages;
        
    }
    
    /**
     * ISPC-2459 Ancuta 06.08.2020
     * @param unknown $ipid
     * @param unknown $date
     * @return void|boolean
     */
    public static function find_sent_by_patient_and_day($ipid,$date){
        
        if ( empty($ipid) || empty($date) ){
            return;
        }
       
        $sent_messages= Doctrine_Query::create()
        ->select('*,AES_DECRYPT(message,"' . Zend_Registry::get('salt') . '") as message')
        ->from('Hl7MessagesSent')
        ->where("ipid =?", $ipid)
        ->andWhere("item_day =?", $date)
        ->andWhere("send_ok = ?",'yes')
        ->fetchOne(null, Doctrine_Core::HYDRATE_ARRAY);
        
        if(empty($sent_messages)){
            return true;
        } else{
            return false;
        }
        
    }
    
}