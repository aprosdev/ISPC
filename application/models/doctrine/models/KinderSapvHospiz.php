<?php

/**
 * KinderSapvHospiz
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ISPC
 * @subpackage Application (2018-08-17)
 * @author     carmen <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class KinderSapvHospiz extends BaseKinderSapvHospiz
{
	/**
	 * define the FORMID and FORMNAME, if you want to piggyback some triggers
	 * @var unknown
	 */
	const TRIGGER_FORMID    = null;
	const TRIGGER_FORMNAME  = 'frmKinderSapvHospiz_ispc2234';
	
	/**
	 * insert into patient_files will use this
	 */
	const PATIENT_FILE_TABNAME  = 'KinderSapvHospiz_ispc2234';
	const PATIENT_FILE_TITLE    = 'KinderSapvHospiz_PDF 2018'; //this will be translated
	
	/**
	 * insert into patient_course will use this
	 */
	const PATIENT_COURSE_TITLE_CREATE = 'Kinder SAPV Hospizbedarfsbogen Formular hinzugefÃ¼gt';
	const PATIENT_COURSE_TITLE_EDIT = 'Kinder SAPV Hospizbedarfsbogen Formular wurde editiert';
	const PATIENT_COURSE_TABNAME_SAVE    = 'KinderSapvHospiz_save';
	const PATIENT_COURSE_TYPE       = 'F';
	
	public function findOrCreateOneByIdAndIpid($id = 0 , $ipid = '', array $data = array(), $hydrationMode = Doctrine_Core::HYDRATE_RECORD)
	{
		if ( empty($id) && !$entity = $this->findOneByIpid($ipid)) {
	
			//$entity = $this->getTable()->create();
			//$entity->ipid = $ipid;
			//$entity->save();
			return;
		}
		else 
		{		
		//else 
		//{
			//$entity =  new Doctrine_Collection('KinderSapvHospiz');
			//$entity->toArray();
			//$entity->synchronizeWithArray($data);
			//$entity->save();
		//}
	//print_r($entity); exit;
		//unset($data[$this->getTable()->getIdentifier()]);
	
		//$entity->fromArray($data); //update
	
		 //at least one field must be dirty in order to persist
		
			return $entity;
		}
	}
	
	
	
	/**
	 * @claudiu
	 * @param string $ipid
	 * @param unknown $hydrationMode
	 * @return void|Ambigous <Doctrine_Collection, multitype:>
	 */
	public function findByIpid( $ipid = '', $hydrationMode = Doctrine_Core::HYDRATE_ARRAY )
	{
		if (empty($ipid) || ! is_string($ipid)) {
	
			return;
	
		} else {
			return $this->getTable()->findBy('ipid', $ipid, $hydrationMode);
	
		}
	}
	
	/**
	 * @claudiu
	 * @param string $ipid
	 * @param unknown $hydrationMode
	 * @return void|Ambigous <Doctrine_Collection, multitype:>
	 */
	
	public function findOneByIpid( $ipid = '', $hydrationMode = Doctrine_Core::HYDRATE_ARRAY )
	{
		if (empty($ipid) || ! is_string($ipid)) {
	
			return;
	
		} else {
			return $this->getTable()->createQuery('kh')
			->where('ipid = ?')
			->orderBy('id DESC') // just in case the delete is not ok
			->limit(1)
			->fetchOne(array($ipid), $hydrationMode);
		}
	}
	
	/*public function get_patient_kinder_sapv_hospiz($ipid,$clientid,$form_id = false)
	{
		$actions_sql = Doctrine_Query::create()
		->select('*')
		->from('KinderSapvHospiz')
		->where("ipid= ?", $ipid)
		->andWhere("clientid= ?", $clientid);
		if($form_id ){
			$actions_sql->andWhere("id = ?", $form_id);
		}
		//$actions_sql->andWhere('isdelete = 0');
	
		$actionsarray = $actions_sql->fetchArray();
	
		if($actionsarray)
		{
			return $actionsarray;
		}
	}*/

}