<?php

/**
 * MePatientRequestsProcessed
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ISPC
 * @subpackage Application (2020-01-30)
 * @author     Ancuta <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 * 
 *  ISPC-2432
 */
class MePatientRequestsProcessed extends BaseMePatientRequestsProcessed
{            
 
    public static function cronjob_mePatient_process_requests( $limit = 1000 )
    { 
        
        if (empty($limit) || ! is_numeric($limit)) {
            $limit = 1000;
        }
        $received_requests = Doctrine_Query::create()
        ->select('s.*,mpd.ipid,mpd.device_internal_id,ep.ipid,ep.clientid')
        ->from('MePatientRequestsReceived s')
        ->leftJoin('s.MePatientDevices mpd')
        ->leftJoin('mpd.EpidIpidMapping ep')
        ->where("processed = ?", "no")
        ->limit($limit)
        ->fetchArray()
        ;

        if(empty($received_requests)){
            return;
        }
        
        $mePatient = new Pms_mePatient();
        $pfile_form_obj = new Application_Form_PatientFileUpload();
        
        try {
            $processed_data = array();
            $not_processed_data = array();
            foreach($received_requests as $load_line =>$data){
                //var_dump($data['MePatientDevices']['id']); exit;
                // get ipid
                $ipid = $data['MePatientDevices']['EpidIpidMapping']['ipid'];
                $clientid = $data['MePatientDevices']['EpidIpidMapping']['clientid'];
                $deviceid = $data['MePatientDevices']['id'];
                
                
                $process_payload = array();
                if(!empty($ipid) && !empty($clientid)){
                    $process_payload = $mePatient->process_payload($data['requests_received_ID'],$data['payload'], $deviceid, $ipid);
                }
                
                $payload_delivery = array();
                if(!empty($process_payload['files']['paths'])){
                    // adauga la pacient
                    foreach($process_payload['files']['paths'] as $uuid=>$file_path){
                        // save file
                        $pfile_form_obj->system_file_upload($clientid,$ipid,$file_path);
    
                        $processed_data[] = array(
                            'requests_received_ID'=>$data['requests_received_ID'],
                            'uuid'=>$uuid,
                            'type'=>'img',
                            'success'=> empty($process_payload['files']['errors'][$uuid]) ? 'yes' : 'no',
                            'message'=> $process_payload['files']['errors'][$uuid].' '.$file_path,
                        );
                        
                        $payload_delivery[] = array(
                            'payload_id'=>$data['external_payload_ID'],
                            'uuid'=>$uuid,
                            'success'=> empty($process_payload['files']['errors'][$uuid]) ? 'y' : 'n',
                            'date'=> date("Y-m-d H:i:s"),
                        );
                        
                    }
                } elseif(!empty($process_payload['files']['errors'])){
                    
                    foreach($process_payload['files']['errors'] as $uuid=>$file_error){
                        
                        $not_processed_data[] = array(
                            'requests_received_ID'=>$data['requests_received_ID'],
                            'uuid'=>$uuid,
                            'type'=>'img',
                            'success'=> 'no',
                            'message'=> $file_error,
                        );
                        
                        $payload_delivery[] = array(
                            'payload_id'=>$data['external_payload_ID'],
                            'uuid'=>$uuid,
                            'success'=> 'n',
                            'message'=> $file_error,
                            'date'=> date("Y-m-d H:i:s"),
                        );
                        
                    }
                    
                } 
                
                
                if(!empty($process_payload['results']['processed'])){
                    // adauga la pacient
                    foreach($process_payload['results']['processed'] as $uuid=>$result_file_path){

                        // save file
                        $pfile_form_obj->system_file_upload($clientid,$ipid,$result_file_path,false,'results');
                        
                        $processed_data[] = array(
                            'requests_received_ID'=>$data['requests_received_ID'],
                            'uuid'=>$uuid,
                            'type'=>'result',
                            'success'=> empty($process_payload['results']['errors'][$uuid]) ? 'yes' : 'no',
                            'message'=> $process_payload['results']['errors'][$uuid].' '.$result_file_path,
                        );
  
                        unlink ($result_file_path);
                        
                        $payload_delivery[] = array(
                            'payload_id'=>$data['external_payload_ID'],
                            'uuid'=>$uuid,
                            'success'=> empty($process_payload['results']['errors'][$uuid]) ? 'y' : 'n',
                            'date'=> date("Y-m-d H:i:s"),
                        );
                        
                    }
                } 
                elseif(!empty($process_payload['results']['errors'])){
                    
                    foreach($process_payload['results']['errors'] as $uuid=>$result_error){
                        
                        $not_processed_data[] = array(
                            'requests_received_ID'=>$data['requests_received_ID'],
                            'uuid'=>$uuid,
                            'type'=>'result',
                            'success'=> 'no',
                            'message'=> $result_error,
                        );
                        
                        $payload_delivery[] = array(
                            'payload_id'=>$data['external_payload_ID'],
                            'uuid'=>$uuid,
                            'success'=> 'n',
                            'message'=> $result_error,
                            'date'=> date("Y-m-d H:i:s"),
                        );
                        
                    }
                    
                }
                
                
                // mark as proccessd
                Doctrine_Query::create()
                ->update('MePatientRequestsReceived')
                ->set("processed", "?", "yes")
                ->where('requests_received_ID = ?', $data['requests_received_ID'])
                ->execute();
                
                //SAVE TO Proxy 
                try {
                    if (  Zend_Registry::isRegistered('mepatient') && ($mePatient_cfg = Zend_Registry::get("mepatient")) )
                    {
                        $externalManagerMePatient = Doctrine_Manager::getInstance();
                        $externalConnection = $externalManagerMePatient->openConnection($mePatient_cfg['proxy']['doctrine']['dsn']);
                        $sql_values = array();
                        foreach($payload_delivery as $paylod){
                            $sql_values [] = "('".$paylod['payload_id']."','".$paylod['uuid']."','".$paylod['success']."','".$paylod['message']."','".$paylod['date']."') ";
                        }
                        $sql ="";
                        if(!empty($sql_values)){
                            $values = implode(", ",$sql_values);
                            $sql = "INSERT INTO pp_payload_delivery (payload_id, uuid,success,message, date) VALUES ".$values;
                            $ins = $externalConnection ->prepare($sql);
                            $ins->execute();
                        }
                        
                        
                        
                        $externalConnection->close();
                    }
                
                } catch (Exception $e) {
                    echo $e->getMessage();
                    self::_log_error(__METHOD__ . " : " .$e->getMessage() . PHP_EOL . $e->getTraceAsString());
                }
            }
    
            if(!empty($processed_data)){
                $collection = new Doctrine_Collection('MePatientRequestsProcessed');
                $collection->fromArray($processed_data);
                $collection->save();
            }
            
            if(!empty($not_processed_data)){
                $collection = new Doctrine_Collection('MePatientRequestsNotProcessed');
                $collection->fromArray($not_processed_data);
                $collection->save();
            }
        
        } catch (Exception $e) {
            self::_log_error(__METHOD__ . " : " .$e->getMessage() . PHP_EOL . $e->getTraceAsString());
        }
        
    }

}