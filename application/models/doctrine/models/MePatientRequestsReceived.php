<?php

/**
 * MePatientRequestsReceived
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ISPC
 * @subpackage Application (2020-01-30)
 * @author     Ancuta <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 *  ISPC-2432
 */
class MePatientRequestsReceived extends BaseMePatientRequestsReceived
{            
 
    
    
    
    
    public static function cronjob_mePatient_fetch_from_servers()
    {
        if ( ! Zend_Registry::isRegistered('mepatient')
            || ! ($mePatient_cfg = Zend_Registry::get("mepatient")) )
        {
            return;
        }
        
        $queryReEncrypt = null;
        
        $local_key = Zend_Registry::get('salt');
       
        try {
            
            $externalManagerMePatient = Doctrine_Manager::getInstance();
            $externalConnection = $externalManagerMePatient->openConnection($mePatient_cfg['proxy']['doctrine']['dsn']);
            
            $externalCollection = Doctrine_Query::create($externalConnection)
            ->select('date,device,payload,processed')
            ->from('PpRequests')
            ->where("processed = ?", "n")
            ->fetchArray();
            
            if ( ! empty($externalCollection)) {
                
                $primaryKey = Doctrine_Core::getTable('PpRequests')->getIdentifier();
                
                $externalCollectionIDS = array_column($externalCollection, $primaryKey);
                
                array_walk($externalCollection, function(&$item) use ($primaryKey, $queryReEncrypt, $local_key){
                    
                    $item['processed'] = 'no';
                    $item['external_payload_ID'] = $item[$primaryKey];
                    $item['external_payload_date'] = $item['date'];
                    
                    $item['device_id'] = $item['device'];
                    unset($item[$primaryKey]);
                    
                });
                
                
                
                //save on our master server
                $collection = new Doctrine_Collection('MePatientRequestsReceived');
                $collection->fromArray($externalCollection);
                $collection->save();
                
                
                if ($keys = $collection->getPrimaryKeys()) {
                    //saved OK, update slave socketServer db
                    Doctrine_Query::create($externalConnection)
                    ->update('PpRequests')
                    ->set("processed", "?", "y")
                    ->whereIn($primaryKey, $externalCollectionIDS)
                    ->execute()
                    ;
                }
                    
            }
            
            $externalConnection->close();
            
        } catch (Exception $e) {
            /*
            echo $e->getMessage();
            echo "<br/>";
            echo $e->getTraceAsString();
            echo "<br/>";
            echo "<br/>";
            echo "<br/>";
            */
            self::_log_error(__METHOD__ . " : " .$e->getMessage() . PHP_EOL . $e->getTraceAsString());
        }
        
        return true;
    }

}