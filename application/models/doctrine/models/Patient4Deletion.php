<?php

/**
 * Patient4Deletion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ISPC
 * @subpackage Application (2020-10-23)
 * @author     Ancuta <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 *  ISPC-2474
 */
class Patient4Deletion extends BasePatient4Deletion
{            
    /**
     * translations are grouped into an array
     * @var unknown
     */
    const LANGUAGE_ARRAY    = 'patient4deletion_lang';
            
    /**
     * define the FORMID and FORMNAME, if you want to piggyback some triggers
     * @var unknown
     */
    const TRIGGER_FORMID    = null;
    const TRIGGER_FORMNAME  = 'frm_patient4deletion';
            
    /**
     * insert into patient_files will use this
     */
    const PATIENT_FILE_TABNAME  = 'Patient4Deletion';
    const PATIENT_FILE_TITLE    = 'Patient4Deletion PDF'; //this will be translated
            
    /**
     * insert into patient_course will use this
     */
    const PATIENT_COURSE_TITLE      = 'Patient4Deletion PDF was created';
    const PATIENT_COURSE_TABNAME    = 'patient4deletion';
    const PATIENT_COURSE_TYPE       = ''; // add letter

    
    
    /**
     * ISPC-2474 Ancuta 23.10.2020
     * @param array $clientids
     */
    public function set_patients4deletion($clientids = array(), $nr_of_years = 10){
        if ( empty($clientids)){
            return;
        }
        // get all each year by client 
        // TODO-3651
        
        //ISPC-2807 Ancuta 03.03.2021
        $allowed_models = array('PatientCourse');
        //--
        
        if(!isset($nr_of_years) || $nr_of_years == 0){
            $nr_of_years = 10;
        } 
        $discharge_filter = array();
        $discharge_filter['x days before'] = 365 * $nr_of_years;  
        
        
        
        
        
        $patient_models = Pms_CommonData::patient_related_models();
        $models_with_issues = array();
        foreach($patient_models as $model => $model_data){
            if (class_exists($model)) {
                $entity_pc = null;
                $entity_pc = new $model();
                $patient_models[$model]['columns_info'] = $entity_pc->getTable()->getColumns();
                $patient_models[$model]['columns'] = array_keys($entity_pc->getTable()->getColumns());
            } else{
                $models_with_issues[] = $model;
            }
        }
//         dd($patient_models);
        
        
        //select all exisitng
        
        $pm =  new PatientMaster();
        $discharge_patients = array();
        $data = array();
        $last_discharge = array();
        $actions = array();
        $last_action_model= array();
        foreach($clientids as $clientid){
            
            $discharge_patients[$clientid] = $pm->get_discharged_patients($clientid,$discharge_filter,100);
            
//             dd($discharge_patients);
            $data[$clientid] = array();
            if(!empty($discharge_patients[$clientid])){
         
                foreach($discharge_patients[$clientid] as $k=>$dis){
                    $actions_results = array();
                    foreach($patient_models as $model_ident => $model_data){
                        
                        if(in_array($model_ident,$allowed_models)) { //ISPC-2807 Ancuta 03.03.2021
                            
                            if(in_array('change_date',$model_data['columns'])){
                                $actions_q = Doctrine_Query::create();
                                $actions_q->select("*,IF(change_date = '0000-00-00 00:00:00', create_date, IF(change_date = '1970-01-01 01:00:00', create_date, change_date)) as last_update,'".$model_ident."' as model_name   ");
                                $actions_q->from($model_ident);
                                $actions_q->where($model_data['patient_ident'] .'=? ',$dis['ipid']);
                                $actions_q->orderBy('last_update DESC');
                                $actions_q->limit(1);
                                $actions_results =  $actions_q->fetchArray();
                            } elseif(in_array('create_date',$model_data['columns'])){
                                $actions_q = Doctrine_Query::create();
                                $actions_q->select("*,create_date as last_update,'".$model_ident."' as model_name  ");
                                $actions_q->from($model_ident);
                                $actions_q->where($model_data['patient_ident'] .'=? ',$dis['ipid']);
                                $actions_q->orderBy('last_update DESC');
                                $actions_q->limit(1);
                                $actions_results =  $actions_q->fetchArray();
                            } else{
                                // NO date
                            }
                            
                            if(!empty($actions_results)){
                                $actions[$dis['ipid']][] = $actions_results[0];
                            }
                        }
                        
                    }
                    
                usort($actions[$dis['ipid']], array(new Pms_Sorter('last_update'), "_date_compare"));
                $last_action_model [$dis['ipid']] = end($actions[$dis['ipid']]);
                    
                 usort($dis['PatientDischarge'], array(new Pms_Sorter('discharge_date'), "_date_compare"));
                 $last_discharge[$dis['ipid']] = end($dis['PatientDischarge']);
                 
                 $data[$clientid][$dis['ipid']] = array(
                    'ipid'=>$dis['ipid'],
                     'discharge_date'=> $last_discharge[$dis['ipid']]['discharge_date'],
                     'last_action_date'=> isset($last_action_model [$dis['ipid']]['last_update']) && $last_action_model [$dis['ipid']]['last_update'] != "0000-00-00 00:00:00" ? $last_action_model [$dis['ipid']]['last_update'] : $dis['last_update'],
                     'last_action_model'=> $last_action_model [$dis['ipid']]['model_name'],
                   );
                 
                  Patient4DeletionTable::getInstance()->findOrCreateOneBy('ipid', array( $dis['ipid']), $data[$clientid][$dis['ipid']] );
                }
            }
            
//             if(!empty($data[$clientid]) ){
//                 //insert many records with one query!!
//                 $collection = new Doctrine_Collection('Patient4Deletion');
//                 $collection->fromArray($data[$clientid]);
//                 $collection->save();
//             }
        }
        
//         dd($last_action_model);
        
    }
    
    /**
     *  //ISPC-2474 Ancuta 23.10.2020 + TODO-3787 01.04.2021
     * @param array $clientid
     */
    public function process_patientdeletion($clientid = array()){
        if ( empty($clientid) || $clientid == 0){
            return;
        }
        

        $writer = new Zend_Log_Writer_Stream(APPLICATION_PATH . '/../public/log/patient4deletion.log');
        $log = new Zend_Log($writer);
        
        if($log)
        {
            $log->crit("---------------------------------------------- -------------- ");
            $log->crit("-------------- Start  for client  ".$clientid."  -------------- ");
        }
        
        $qr = Doctrine_Query::create()->select("p.*, e.*, p4d.*")
	        ->from('PatientMaster p')
	        ->leftJoin("p.EpidIpidMapping e")
	        ->leftJoin("p.Patient4Deletion p4d")
	        ->where('e.clientid = ?', $clientid)
	        ->andWhere('p.isdelete = 0')
	        ->andWhere("p4d.scheduled_deletion = 1")
        	->limit(15);
	        $patients_details = $qr->fetchArray();

	        if(empty($patients_details)){
	            
	            if($log)
	            {
	                $log->crit("-------------- No patients scheduled for delete in client :".$clientid."  -------------- ");
	            }
	            return;
	        }
	        
	        $patient_models = Pms_CommonData::patient_related_models();
	        $models_with_issues = array();
	        foreach($patient_models as $model => $model_data){
	            if (class_exists($model)) {
	                $entity_pc = null;
	                $entity_pc = new $model();
	                $patient_models[$model]['columns_info'] = $entity_pc->getTable()->getColumns();
	                $patient_models[$model]['columns'] = array_keys($entity_pc->getTable()->getColumns());
	            } else{
	                $models_with_issues[] = $model;
	            }
	        }
	        
	        foreach($patients_details as $k=>$pat){
	            
                $p_pmaster = Doctrine::getTable('PatientMaster')->findOneByIpid($pat['ipid']);
                if($p_pmaster){
                    $p_pmaster->isdelete = 1;
                    $p_pmaster->save();
                }
	                
	            foreach($patient_models as $model_ident => $model_data){
	                if($model_ident != "PatientMaster"){
    	                try {
    	                    
    	                    if($model_data['patient_ident'] == "ipid" && !empty($pat['ipid']))
    	                    {
    	                        
    	                        $actions_q = Doctrine_Query::create();
    	                        $actions_q->select("*");
    	                        $actions_q->from($model_ident);
    	                        $actions_q->where($model_data['patient_ident']." = ?",  $pat['ipid']);
    	                        $actions_results =  $actions_q->fetchArray();
    	                        
    	                        if(!empty($actions_results)){
    	                            
            	                    $q = Doctrine_Query::create()
            	                    ->delete($model_ident)
            	                    ->where($model_data['patient_ident']." = ?",  $pat['ipid']);
            	                    $q->execute();
            	 
            	                    if($log)
            	                    {
            	                        $log->crit("Data from ".$model_ident. " for patient ".$pat['ipid']." was deleted!");
            	                    }
    	                        }
    	                    }
    	                    
    	                } catch (Exception $e) {
    	                    
    	                    if($log)
    	                    {
    	                        $log->crit($e->getMessage() . PHP_EOL . $e->getTraceAsString());
    	                    }
    	                }
	                }
	                
	                
	            }
	            
	
	            
	            
	            if(!empty($pat['Patient4Deletion'])){
	                $p_4del = Doctrine::getTable('Patient4Deletion')->findOneByIpid($pat['ipid']);
    	            if($p_4del){
    	                $p_4del->final_delete = 1;
    	                $p_4del->final_delete_date = date('Y-m-d H:i:s', time());
    	                $p_4del->save();
    	            }
	            }
	            
	            
	            
	            
	            
	      
	        }
	        
	        if($log)
	        {
	            $log->crit("Completed for client  ".$clientid."   ");
	        }
	        
    }
 
    /**
     * Ancuta 02.11.202
     * @param unknown $clientid
     * @return array|array|Doctrine_Collection
     */
    public function patient_2_be_deleted($clientid)
    {
        if (empty($clientid)) {
            return array();
        }
        
        $showinfo = new Modules();
        if(!$showinfo->checkModulePrivileges("243", $clientid))
        {
            return array();
        }
        

        $qr = Doctrine_Query::create()->select("
	        p.ipid,
            e.epid as epid,
            p.birthd,
            p.admission_date,
            p.change_date,
            p4d.*
	        ")
            ->from('PatientMaster p')
            ->leftJoin("p.EpidIpidMapping e")
            ->leftJoin("p.Patient4Deletion p4d")
            ->where('e.clientid = ?', $clientid)
            ->andWhere('p.isdelete = 0')
            ->andWhere("p.isstandbydelete = 0")
            ->andWhere("p4d.final_delete = 0");
        $patients_details_nl = $qr->fetchArray();

        if (! empty($patients_details_nl)) {
            return $patients_details_nl;
        } else {
            return array();
        }
    }

}