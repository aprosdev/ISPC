<?php

/**
 * PatientAcp
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ISPC
 * @subpackage Application (2017-09-07)
 * @author     claudiu <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class PatientAcp extends BasePatientAcp
{
    
    
    public static function getDefaultRadios (){
        return  array(
            ""      => "nicht bekannt",
            "no"	=> "Ist nicht vorhanden",
            "yes"	=> "Ist vorhanden",
            "no_wanted" => "Ist nicht gewollt",             //ISPC-2671 Lore 07.09.2020
        );
    }
   
    
	private static $mandatory_columns = array(
			'ipid',
			'division_tab',
	);
	
	/**
	 * insert & update
	 * @param array $params
	 * @return boolean|number
	 */
	public function set_new_record($params = array())
	{
	
		if (empty($params) || !is_array($params)) {
			return false;// something went wrong
		}
	
		foreach (self::$mandatory_columns as $column) {
	
			if ( empty($params[$column]) &&  empty($this->{$column}) )
			{
				return false;
			}
		}
	
		foreach ($params as $k => $v)
			if (isset($this->{$k})) {
				$this->{$k} = $v;
			}
	
		$this->save();
	
		return $this->id;
	
	}
	
	/**
	 * if find(id) then delete
	 * @param string $id
	 * @return boolean
	 */
	public function delete_row( $id = null )
	{
		if (( ! is_null($id)) && ($obj = $this->getTable()->find($id)))
		{
			$obj->delete();
			return true;
	
		} else {
			return false;
		}
	}
	
	
	/**
	 * will return as array[ipid][row]
	 *
	 * Aug 22, 2017 @claudiu
	 *
	 * @param array(string) $ipid
	 * @return Ambigous <multitype:, boolean, Doctrine_Collection>
	 */
	public function getByIpid( $ipid = array() , $include_deleted = false) {
	
		$result = false;
	
		if ( empty($ipid)) {
			return $result;
		}
	
		$ipid = is_array($ipid) ? $ipid : [$ipid];
		
		$q = $this->getTable()->createQuery()
		->select('*') //optional select for readability
		->whereIn("ipid", $ipid)
		->fetchArray();
	
	
		if ($q) {

			//get the files from another db
			$acp_files = PatientFileUpload::get_acp_files( $ipid );
			
			$result = array();
				
			foreach ($q as $row) {
				
				$row['files'] = $acp_files[$row['ipid']][ 'acp_file_' . $row['division_tab'] ];
				
				$result[$row['ipid']][] = $row;
			}
	
		}
			
		return $result;
	
	}
	
	
	public function findOrCreateOneByIpidAndDivisionTab($ipid = '', $divisionTab = '', array $data = array())
	{
	    if (empty($ipid) || empty($divisionTab)) {
	        return; //fail-safe
	    }
	    
	    unset($data['division_tab']);
	    unset($data['ipid']);
	    unset($data[$this->getTable()->getIdentifier()]);
	    
	    if ( ! $entity = $this->getTable()->findOneByIpidAndDivisionTab($ipid, $divisionTab )) {
	    
	        $entity = $this->getTable()->create(array('ipid' => $ipid, 'division_tab' => $divisionTab));
	    }
	    
	    
	    $entity->fromArray($data); //update
	    
	    $entity->save(); //at least one field must be dirty in order to persist
	    
	    return $entity;
	}

    /**
     * @param string $ipid
     * @param string $divisionTab
     * @param null $contact_person_id
     * @param array $data
     * @return Doctrine_Record|void
     * @throws Exception
     *
     * ISPC-2565,Elena,26.02.2021
     */
	public function findOrCreateOneByIpidAndDivisionTabAndContactPerson($ipid = '', $divisionTab = '', $contact_person_id = null, array $data = array())
	{
	    if (empty($ipid) || empty($divisionTab ) /*|| empty($contact_person_id )*/) {
	        return; //fail-safe
	    }

	    unset($data['division_tab']);
	    unset($data['ipid']);
	    //ISPC-2565,Elena,08.03.2021
        //@todo seems to be nessesary to unset $data['contactperson_master_id'] too, otherwise we have problems with contactperson_master_id value in the record - Elena
	    unset($data['contactperson_master_id']);
	    unset($data[$this->getTable()->getIdentifier()]);

	    if ( ! $entity = $this->getTable()->findOneByIpidAndDivisionTabAndContactpersonMasterId($ipid, $divisionTab, $contact_person_id )) {

	        $entity = $this->getTable()->create(array('ipid' => $ipid, 'division_tab' => $divisionTab, 'contactperson_master_id' =>  $contact_person_id));
	    }


	    $entity->fromArray($data); //update

	    $entity->save(); //at least one field must be dirty in order to persist

	    return $entity;
	}
}