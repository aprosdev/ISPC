<?php

/**
 * Patient Besd
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ISPC
 * @subpackage Application (2018-08-31)
 * @author     carmen <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class PatientBesd extends BasePatientBesd
{
	/**
	 * define the FORMID and FORMNAME, if you want to piggyback some triggers
	 * @var unknown
	 */
	const TRIGGER_FORMID    = null;
	const TRIGGER_FORMNAME  = 'frmBesdSurvey_ispc2253';
	
	/**
	 * insert into patient_files will use this
	 */
	const PATIENT_FILE_TABNAME  = 'BesdSurvey_ispc2253';
	const PATIENT_FILE_TITLE    = 'BesdSurvey_PDF 2018'; //this will be translated
	
	/**
	 * insert into patient_course will use this
	 */
	const PATIENT_COURSE_TITLE_CREATE = 'BESD SCORE: ';
	const PATIENT_COURSE_TITLE_EDIT = 'BESD Survey Formular wurde editiert';
	const PATIENT_COURSE_TABNAME_SAVE    = 'besdsurvey_save';
	const PATIENT_COURSE_TYPE       = 'K';
	
	public function findOrCreateOneByIdAndIpid($id = 0 , $ipid = '', array $data = array(), $hydrationMode = Doctrine_Core::HYDRATE_RECORD)
	{
		if ( !empty($id))
		{	
			$entity = $this->getTable()->findOneBy('id', $id, Doctrine_Core::HYDRATE_RECORD);
		}
			return $entity;
	}
	
	
	
	/**
	 * @claudiu
	 * @param string $ipid
	 * @param unknown $hydrationMode
	 * @return void|Ambigous <Doctrine_Collection, multitype:>
	 */
	public function findByIpid( $ipid = '', $hydrationMode = Doctrine_Core::HYDRATE_ARRAY )
	{
		if (empty($ipid) || ! is_string($ipid)) {
	
			return;
	
		} else {
			return $this->getTable()->findBy('ipid', $ipid, $hydrationMode);
	
		}
	}
	
	/**
	 * @claudiu
	 * @param string $ipid
	 * @param unknown $hydrationMode
	 * @return void|Ambigous <Doctrine_Collection, multitype:>
	 */
	
	public function findOneByIpid( $ipid = '', $hydrationMode = Doctrine_Core::HYDRATE_ARRAY )
	{
		if (empty($ipid) || ! is_string($ipid)) {
	
			return;
	
		} else {
			return $this->getTable()->createQuery('kh')
			->where('ipid = ?')
			->orderBy('id DESC') // just in case the delete is not ok
			->limit(1)
			->fetchOne(array($ipid), $hydrationMode);
		}
	}

}