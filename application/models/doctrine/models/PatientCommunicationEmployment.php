<?php
//ISPC-2793 Lore 18.01.2021
/**
 * PatientCommunicationEmployment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ISPC-2793
 * @subpackage Application (2021-01-18)
 * @author     Lore <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class PatientCommunicationEmployment extends BasePatientCommunicationEmployment
{            

    public function getPatientCommunicationEmployment($ipid)
    {
        if (empty($ipid)) {
            return; //fail-safe
        }
        
        $loc = Doctrine_Query::create()
        ->select("*")
        ->from('PatientCommunicationEmployment')
        ->andWhere("ipid= ? ", $ipid);
        $disarr = $loc->fetchArray();
        
        return $disarr;
        
    }
      
    
    public static function getTools()
    {
        $Tools = array(
            '1' => "Hörgerät",
            '2' => "Brille",
            '3' => "Talker",
            '4' => "BigMac",
            '5' => "Sonstiges",
        );
        
        return $Tools;
    }
    
    public static function getCommunication()
    {
        $communication = array(
            '1' => "Verbal",
            '2' => "Über Augen",
            '3' => "Über Hände",
            '4' => "Über HF",
            '5' => "Sonstiges",
        );
        
        return $communication;
    }
    

    
    public function getCommunicationEmployment($ipid)
    {
        if (empty($ipid)) {
            return;
        }
        
        $pce = new PatientCommunicationEmployment();
        $pce_stm = $pce->getPatientCommunicationEmployment($ipid);
        //dd($pce_stm);
        if(!empty($pce_stm)){
            $ja_nein = array('1' => 'Nein', '2' => 'keine Angabe', '3' => 'Ja');

            if(!empty($pce_stm[0]['verbal_utterances_opt'])){
                $verbal_utterances_arr = explode(",", $pce_stm[0]['verbal_utterances_opt']);
                foreach($verbal_utterances_arr as $km => $vm){
                    $pce_stm[0]['verbal_utterances'] = $ja_nein[$vm];
                    if($vm == 3){
                        $pce_stm[0]['verbal_utterances'] .= ' ('.$pce_stm[0]['verbal_utterances_text'].')';
                    }
                }
            }
            
            if(!empty($pce_stm[0]['speech_understanding_opt'])){
                $speech_understanding_arr = explode(",", $pce_stm[0]['speech_understanding_opt']);
                foreach($speech_understanding_arr as $km => $vm){
                    $pce_stm[0]['speech_understanding'] = $ja_nein[$vm];
                    if($vm == 3){
                        $pce_stm[0]['speech_understanding'] .= ' ('.$pce_stm[0]['speech_understanding_text'].')';
                    }
                }
            }
            
            if(!empty($pce_stm[0]['communication_opt'])){
                $communication = PatientCommunicationEmployment::getCommunication();
                $communication[5] .= ' ('.$pce_stm[0]['communication_text'].')';
                $communication_arr = explode(",", $pce_stm[0]['communication_opt']);
                foreach($communication_arr as $km => $vm){
                    $pce_stm[0]['communication'] .= $communication[$vm].'; ';
                }
            }
            
            if(!empty($pce_stm[0]['tools_opt'])){
                $tools = PatientCommunicationEmployment::getTools();
                $tools[5] .= ' ('.$pce_stm[0]['tools_text'].')';
                $tools_arr = explode(",", $pce_stm[0]['tools_opt']);
                foreach($tools_arr as $km => $vm){
                    $pce_stm[0]['tools'] .= $tools[$vm].'; ';
                }
            }
            
            if(!empty($pce_stm[0]['restlessness_opt'])){
                $restlessness_arr = explode(",", $pce_stm[0]['restlessness_opt']);
                foreach($restlessness_arr as $km => $vm){
                    $pce_stm[0]['restlessness'] = $ja_nein[$vm];
                    if($vm == 3){
                        $pce_stm[0]['restlessness'] .= ' ('.$pce_stm[0]['restlessness_text'].')';
                    }
                }
            }
            
        }
        
        return $pce_stm;
        
    }
    
    
}

?>





