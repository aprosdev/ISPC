<?php

/**
 * PatientDrugplanPlanning
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ISPC
 * @subpackage Application (2021-02-17)
 * @author     Ancuta <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 * ISPC-2797 Ancuta 17.02.2021
 */
class PatientDrugplanPlanning extends BasePatientDrugplanPlanning
{            
    /**
     * translations are grouped into an array
     * @var unknown
     */
    const LANGUAGE_ARRAY    = 'patientdrugplanplanning_lang';
            
    /**
     * define the FORMID and FORMNAME, if you want to piggyback some triggers
     * @var unknown
     */
    const TRIGGER_FORMID    = null;
    const TRIGGER_FORMNAME  = 'frm_patientdrugplanplanning';
            
    /**
     * insert into patient_files will use this
     */
    const PATIENT_FILE_TABNAME  = 'PatientDrugplanPlanning';
    const PATIENT_FILE_TITLE    = 'PatientDrugplanPlanning PDF'; //this will be translated
            
    /**
     * insert into patient_course will use this
     */
    const PATIENT_COURSE_TITLE      = 'PatientDrugplanPlanning PDF was created';
    const PATIENT_COURSE_TABNAME    = 'patientdrugplanplanning';
    const PATIENT_COURSE_TYPE       = ''; // add letter

    
    
    public static function get_planned_drugs($ipid)
    {
        if(empty($ipid)){
            return array();
        }
        
        $planned_drugs = array();
        $planned_drugs = Doctrine_Query::create()
        ->select('*')
        ->from('PatientDrugplanPlanning')
        ->where("ipid = ?", $ipid)
        ->andWhere('status="active"')
        ->andWhere('isdelete = 0')
        ->fetchArray();
        
        $drug2plans = array();
        if(!empty($planned_drugs)){
            foreach($planned_drugs as $k=>$pdp){
                //ONLY ONE PER DRUGPLAN ?!??!?!?
                $drug2plans[$pdp['drugplan_id']]= $pdp;
                $drug2plans[$pdp['drugplan_id']]['date']= date('d.m.Y',strtotime($pdp['action_date'])); 
            }
        }
        
        return $drug2plans;
    }
    
    public static function get_planned_drugs2ipids($ipids)
    {
        if(empty($ipids)){
            return array();
        }
        
        $planned_drugs = array();
        $planned_drugs = Doctrine_Query::create()
        ->select('*')
        ->from('PatientDrugplanPlanning')
        ->whereIn("ipid", $ipids)
        ->andWhere('status="active"')
        ->andWhere('isdelete = 0')
        ->fetchArray();
        
        $drug2plans = array();
        if(!empty($planned_drugs)){
            foreach($planned_drugs as $k=>$pdp){
                //ONLY ONE PER DRUGPLAN ?!??!?!?
                $drug2plans[$pdp['ipid']][$pdp['drugplan_id']]= $pdp;
                $drug2plans[$pdp['ipid']][$pdp['drugplan_id']]['date']= date('d.m.Y',strtotime($pdp['action_date'])); 
            }
        }
        
        return $drug2plans;
    }
    
    /**
     * ISPC-2797 Ancuta 18.02.2021
     * @param unknown $clientid
     */
    public function proccess_planned_medications($clientid, $userid = false,$drugplan_ids = false,$ipid = false){
 
        $planned_drugs = array();
        $planned_drugs_q = Doctrine_Query::create()
        ->select('*')
        ->from('PatientDrugplanPlanning')
        ->where('status="active"');
        if($drugplan_ids && !empty($drugplan_ids)){
            if(!is_array($drugplan_ids))
            {
                $drugplan_ids = array($drugplan_ids);
            }
            
            $planned_drugs_q->andWhereIn('drugplan_id',$drugplan_ids);
        } else{
            $planned_drugs_q->andWhere('date(action_date)= ? ',date("Y-m-d"));
        }
        
        if(!empty($ipid)){
            $planned_drugs_q->andWhere('ipid = ?',$ipid);
        }
        
        $planned_drugs_q->andWhere('isdelete = 0');
        $planned_drugs = $planned_drugs_q->fetchArray();
        
        if(empty($planned_drugs)){
            return;
        }
        
        foreach($planned_drugs as $k=>$plan_data){
            
            $drugplan_id = $plan_data['drugplan_id'];
            if(!isset($ipid)){
                $ipid = $plan_data['ipid'];
            }
            
            if($plan_data['action'] == 'add'){ /*#####################ADD ###################*/
                
                //activate medi
                $mod = Doctrine::getTable('PatientDrugPlan')->find($drugplan_id);
                if($mod)
                {
                    $mDetails = $mod->toArray();
                }
 
                
                // trigger save entry  to verlauf
                //Shortcut | Medication name |  dosage | comment | change date 
                
                //$old_med = Doctrine::getTable('Medication')->find($mod->medication_master_id);
                if( $mod->treatment_care == 1 )
                {
                    $master_med = Doctrine::getTable('MedicationTreatmentCare')->find($mod->medication_master_id);
                }
                elseif( $mod->isnutrition == 1 )
                {
                    $master_med = Doctrine::getTable('Nutrition')->find($mod->medication_master_id);
                }
                else
                {
                    $master_med = Doctrine::getTable('Medication')->find($mod->medication_master_id);
                }
                $medication_name ="";
                $medication_name = $master_med->name;
                
                $isbedarfs = $mod->isbedarfs;
                $iscrisis = $mod->iscrisis;
                $isivmed = $mod->isivmed;
                $isschmerzpumpe = $mod->isschmerzpumpe;
                $treatment_care = $mod->treatment_care;
                $isnutrition = $mod->isnutrition;
                $scheduled = $mod->scheduled;
                $isintubated = $mod->isintubated; // ISPC-2176
                
                if($isivmed == 0 && $isbedarfs == 1 && $isschmerzpumpe == 0  && $treatment_care == 0 && $scheduled == 0)
                {
                    $shortcut = "N";
                }
                elseif($isivmed == 1 && $isbedarfs == 0 && $isschmerzpumpe == 0  && $treatment_care == 0 && $scheduled == 0)
                {
                    $shortcut = "I";
                }
                elseif($isivmed == 0 && $isbedarfs == 0 && $isschmerzpumpe == 1  && $treatment_care == 0 && $scheduled == 0)
                {
                    $shortcut = "Q";
                    $prefix = "Schmerzpumpe ";
                }
                elseif($isivmed == 0 && $isbedarfs == 0 && $isschmerzpumpe == 0  && $treatment_care == 1 && $scheduled == 0)
                {
                    $shortcut = "BP";
                }
                elseif($isivmed == 0 && $isbedarfs == 0 && $isschmerzpumpe == 0  && $treatment_care == 0 && $scheduled == 1)
                {
                    $shortcut = "MI";
                }
                elseif($iscrisis == 1 && $isivmed == 0 && $isbedarfs == 0 && $isschmerzpumpe == 0 && $treatment_care == 0 && $scheduled == 0 )
                {
                    $shortcut = "KM";
                }
                elseif($isintubated == 1 && $iscrisis == 0 && $isivmed == 0 && $isbedarfs == 0 && $isschmerzpumpe == 0 && $treatment_care == 0 && $scheduled == 0 )
                {
                    $shortcut = PatientDrugPlan::ISINTUBATED_VERLAUF_SHORTCUT;
                }
                else
                {
                    $shortcut = "M";
                }
                
                $course_text = "";
                $course_text = $medication_name;
                if(!empty($mDetails['dosage'])){
                    $course_text .= ' | '.$mDetails['dosage'];
                }
                if(!empty($mDetails['comment'])){
                    $course_text .= ' | '.$mDetails['comments'];
                }
                if($mDetails['medication_change'] != "0000-00-00 00:00:00"){
                    $course_text .= ' | '.date('d.m.Y',strtotime($mDetails['medication_change']));
                }
                
                
                //UPDATE MEDICATION
                $mod->active_date = date("Y-m-d 00:00:00", time());
                $mod->medication_change = date("Y-m-d 00:00:00", time());
                $_POST['skip_trigger'] = '1';
                $mod->save();
                
                //ADD TO VERLAUF
                $cust = new PatientCourse();
                $cust->ipid = $ipid;
                $cust->course_date = date("Y-m-d H:i:s",time());
                $cust->course_type=Pms_CommonData::aesEncrypt($shortcut);
                $cust->course_title=Pms_CommonData::aesEncrypt($course_text);
                $cust->tabname = Pms_CommonData::aesEncrypt("planned_patient_drugplan_activated");
                $cust->recordid = $mod->id ;
                $cust->user_id = isset($userid) && !empty($userid) ? $userid : "-1";
                $cust->save();
                
                
                
                //update status
                $plan_data_db = Doctrine::getTable('PatientDrugplanPlanning')->find($plan_data['id']);
                if($plan_data_db)
                {
                    $plan_data_db->status = 'processed';
                    $plan_data_db->save();
                }
                
                return true;
                
                
            } else if($plan_data['action'] == 'remove'){/*#####################REMOVE ###################*/
                //delete medi medi
                $mid = $drugplan_id;
                $mod = Doctrine::getTable('PatientDrugPlan')->find($mid);
                
                //delete cocktail if last medication from list is being deleted
                if($mod)
                {
                    $mDetails = $mod->toArray();
                }
                
                if($mDetails['cocktailid'] > 0)
                {
                    $cocktailsC = new PatientDrugPlanCocktails();
                    $cocktailsDrugs = $cocktailsC->countDrugsPerCocktail(array($mDetails['cocktailid']));
                    
                    if(count($cocktailsDrugs[$mDetails['cocktailid']]) == 0 && $_POST['btnsubmut'])
                    {
                        //if this is the last medication with isdelete 0 then we have to delete the cocktail
                        //changed, now we delete if we have 0 medis and submit button clicked
                        //set $mDetails->cocktailid to isdelete 1
                        $cocktailQ = Doctrine::getTable('PatientDrugPlanCocktails')->findOneById($mDetails['cocktailid']);
                        $cocktailQ->isdelete = 1;
                        $cocktailQ->save();
                    }
                }
                
                /* ============= Save in Patient drug plan history========================= */
                //TODO-2785 Lore 18.02.2020
                //$old_med = Doctrine::getTable('Medication')->find($mod->medication_master_id);
                if( $mod->treatment_care == 1 )
                {
                    $old_med = Doctrine::getTable('MedicationTreatmentCare')->find($mod->medication_master_id);
                }
                elseif( $mod->isnutrition == 1 )
                {
                    $old_med = Doctrine::getTable('Nutrition')->find($mod->medication_master_id);
                }
                else
                {
                    $old_med = Doctrine::getTable('Medication')->find($mod->medication_master_id);
                }
                $medication_old_medication_name = $old_med->name;
                
                $history = new PatientDrugPlanHistory();
                $history->ipid = $ipid;
                $history->pd_id = $mod->id;
                $history->pd_medication_master_id = $mod->medication_master_id;
                $history->pd_medication_name = $medication_old_medication_name;
                $history->pd_medication = $mod->medication;
                $history->pd_dosage = $mod->dosage;
                $history->pd_comments = $mod->comments;
                $history->pd_isbedarfs = $mod->isbedarfs;
                $history->pd_treatment_care = $mod->treatment_care;
                $history->pd_isnutrition = $mod->isnutrition;
                $history->pd_isintubated = $mod->isintubated; // ISPC-2176
                $history->pd_isivmed = $mod->isivmed;
                $history->pd_isschmerzpumpe = $mod->isschmerzpumpe;
                $history->pd_cocktailid = $mod->cocktailid;
                $history->pd_edit_type = $mod->edit_type;
                $history->pd_verordnetvon = $mod->verordnetvon;
                $history->pd_medication_change = $mod->medication_change;
                $history->pd_create_date = $mod->create_date;
                $history->pd_create_user = $mod->create_user;
                $history->pd_change_date = $mod->change_date;
                $history->pd_change_user = $mod->change_user;
                $history->pd_isdelete = $mod->isdelete;
                $history->pd_delete_date = $mod->delete_date;
                $history->save();
                
                
                $history_id = $history->id;
                
                $dosage_history_array[$mid] = PatientDrugPlanDosage::get_all_patient_drugplan_dosage($ipid,$mid);
                
                if(!empty($dosage_history_array[$mid]))
                {
                    // add dosage to - dosage history
                    foreach($dosage_history_array[$mid] as $k=>$dv)
                    {
                        $history_pd = new PatientDrugPlanDosageHistory();
                        $history_pd->ipid = $ipid;
                        $history_pd->pdd_id = $dv['id'];
                        $history_pd->history_id = $history_id;
                        $history_pd->pdd_drugplan_id = $dv['drugplan_id'];
                        $history_pd->pdd_dosage = $dv['dosage'];
                        $history_pd->pdd_dosage_concentration = $dv['dosage_concentration'];//TODO-3624 Ancuta 23.11.2020
                        $history_pd->pdd_dosage_time_interval =  $dv['dosage_time_interval'];
                        $history_pd->pdd_isdelete	= $dv['isdelete'];
                        $history_pd->pdd_create_user = $dv['create_user'];
                        $history_pd->pdd_create_date = $dv['create_date'];
                        $history_pd->pdd_change_user = $dv['change_user'];
                        $history_pd->pdd_change_date = $dv['change_date'];
                        $history_pd->save();
                    }
                }
                
                
                $extra_history_array = PatientDrugPlanExtra::get_patient_all_drugplan_extra($ipid,$mid);
                
                if(!empty($extra_history_array[$mid]))
                {
                    $extra_data = $extra_history_array[$mid];
                    
                    $history_pde = new PatientDrugPlanExtraHistory();
                    $history_pde->ipid = $ipid;
                    $history_pde->pde_id = $extra_data['id'];
                    $history_pde->history_id = $history_id;
                    $history_pde->pde_drugplan_id = $mid;
                    $history_pde->pde_drug = $extra_data['drug'];
                    $history_pde->pde_unit = $extra_data['unit'];
                    $history_pde->pde_type = $extra_data['type'];
                    $history_pde->pde_indication = $extra_data['indication'];
                    $history_pde->pde_importance = $extra_data['importance'];
                    $history_pde->pde_isdelete	= $extra_data['isdelete'];
                    
                    $history_pde->pde_create_user = $extra_data['create_user'];
                    $history_pde->pde_create_date = $extra_data['create_date'];
                    $history_pde->pde_change_user = $extra_data['change_user'];
                    $history_pde->pde_change_date = $extra_data['change_date'];
                    $history_pde->save();
                }
                
                //continue and delete the medication
                $mod->medication_change = date("Y-m-d H:i:s", time());
                $mod->isdelete = 1;
                $mod->delete_date =  date("Y-m-d H:i:s");
                $_POST['skip_trigger'] = '1';
                
                $mod->save();
                
                
                //TODO-3462 Ancuta 19.10.2020
                //delete pharma requests
                $exists_in_pharma = Doctrine_Query::create()
                ->select('*')
                ->from('PharmaPatientRequests')
                ->where('ipid = ?',$ipid)
                ->andWhere('drugplan_id = ?',$mid)
                ->fetchArray();
                
                if(!empty($exists_in_pharma)){
                    foreach( $exists_in_pharma as $k=>$ph_line){
                        $mpd = Doctrine::getTable('PharmaPatientRequests')->find($ph_line['id']);
                        $mpd->isdelete = 1;
                        $mpd->save();
                    }
                }
                // --

                
                $isbedarfs = $mod->isbedarfs;
                $iscrisis = $mod->iscrisis;
                $isivmed = $mod->isivmed;
                $isschmerzpumpe = $mod->isschmerzpumpe;
                $treatment_care = $mod->treatment_care;
                $isnutrition = $mod->isnutrition;
                $scheduled = $mod->scheduled;
                $isintubated = $mod->isintubated; // ISPC-2176
                
                if($isivmed == 0 && $isbedarfs == 1 && $isschmerzpumpe == 0  && $treatment_care == 0 && $scheduled == 0)
                {
                    $shortcut = "N";
                }
                elseif($isivmed == 1 && $isbedarfs == 0 && $isschmerzpumpe == 0  && $treatment_care == 0 && $scheduled == 0)
                {
                    $shortcut = "I";
                }
                elseif($isivmed == 0 && $isbedarfs == 0 && $isschmerzpumpe == 1  && $treatment_care == 0 && $scheduled == 0)
                {
                    $shortcut = "Q";
                    $prefix = "Schmerzpumpe ";
                }
                elseif($isivmed == 0 && $isbedarfs == 0 && $isschmerzpumpe == 0  && $treatment_care == 1 && $scheduled == 0)
                {
                    $shortcut = "BP";
                }
                elseif($isivmed == 0 && $isbedarfs == 0 && $isschmerzpumpe == 0  && $treatment_care == 0 && $scheduled == 1)
                {
                    $shortcut = "MI";
                }
                elseif($iscrisis == 1 && $isivmed == 0 && $isbedarfs == 0 && $isschmerzpumpe == 0 && $treatment_care == 0 && $scheduled == 0 )
                {
                    $shortcut = "KM";
                }
                elseif($isintubated == 1 && $iscrisis == 0 && $isivmed == 0 && $isbedarfs == 0 && $isschmerzpumpe == 0 && $treatment_care == 0 && $scheduled == 0 )
                {
                    $shortcut = PatientDrugPlan::ISINTUBATED_VERLAUF_SHORTCUT;
                }
                else
                {
                    $shortcut = "M";
                }
                
                
                $cust = new PatientCourse();
                $cust->ipid = $ipid;
                $cust->course_date = date("Y-m-d H:i:s",time());
                $cust->course_type=Pms_CommonData::aesEncrypt($shortcut);
                $cust->course_title=Pms_CommonData::aesEncrypt($medication_old_medication_name." wurde abgesetzt.");
                $cust->tabname = Pms_CommonData::aesEncrypt("patient_drugplan_deleted"); //i have added this, so we can better group in verlauf
                $cust->user_id = isset($userid) && !empty($userid) ? $userid : "-1";
                $cust->save();
                
                
                //update status 
                $plan_data_db = Doctrine::getTable('PatientDrugplanPlanning')->find($plan_data['id']);
                if($plan_data_db)
                {     
                    $plan_data_db->status = 'process';
                    $plan_data_db->save();
                }
                
                return true;
            }
        }
        
        
    }
    
    

}