<?php
// ISPC-2788 Lore 08.01.2021
/**
 * PatientNutritionInfo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ISPC-2788
 * @subpackage Application (2021-01-08)
 * @author     Lore <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class PatientNutritionInfo extends BasePatientNutritionInfo
{            

    public function getPatientNutritionInfo($ipid)
    {
        if (empty($ipid)) {
            return; //fail-safe
        }
        
        $loc = Doctrine_Query::create()
        ->select("*")
        ->from('PatientNutritionInfo')
        ->andWhere("ipid= ? ", $ipid);
        $disarr = $loc->fetchArray();
        
        return $disarr;
        
    }
 
    public static function getFood_consistencys()
    {
        $food_consistencys = array(
            '1' => "Normal",
            '2' => "Passierte Kost",
            '3' => "Streng passierte Kost",
            '4' => "In kleine Stücke geschnitten",
            '5' => "Zerdrückt",
            '6' => "Sonstige",
        );
        
        return $food_consistencys;
    }
    
    public static function getIndependence()
    {
        $independence = array(
            '1' => "Isst selbstständig",
            '2' => "Benötigt Unterstützung",
            '3' => "Sonstige",
        );
        
        return $independence;
    }

    public static function getAdministration()
    {
        $administration = array(
            '1' => "Flasche",
            '2' => "Becher",
            '3' => "Löffel",
            '4' => "Schnabelbecher",
            '5' => "Strohhalm",
            '6' => "Sonstige",
        );
        
        return $administration;
    }
    
    
    public function getNutritionInformation($ipid)
    {
        if (empty($ipid)) {
            return;
        }
        
        $pni = new PatientNutritionInfo();
        $pni_stm = $pni->getPatientNutritionInfo($ipid);
        //dd($pni_stm);
        if(!empty($pni_stm)){
            
            $ja_nein = array('1' => 'Nein', '2' => 'keine Angabe', '3' => 'Ja');
            
            $pni_stm[0]['allgemein'] = '<ul class="nutrition_pm">';
            if(!empty($pni_stm[0]['allergies_opt'])){
                $pni_stm[0]['allergies'] = '<ul class="nutrition_pm">';
                $allergies_opt_arr = explode(",", $pni_stm[0]['allergies_opt']);
                foreach($allergies_opt_arr as $km => $vm){
                    $pni_stm[0]['allergies'] .= '<li>'.$ja_nein[$vm];
                    if($vm == 3){
                        $pni_stm[0]['allergies'] .= ' ('.$pni_stm[0]['allergies_text'].')';
                    }
                    $pni_stm[0]['allergies'] .= '</li>';
                }
                $pni_stm[0]['allergies'] .= '</ul>';
            }
            $pni_stm[0]['allgemein'] .= '</ul>';
            
            
            $pni_stm[0]['food'] = '<ul class="nutrition_pm">';
                if(!empty($pni_stm[0]['oral_opt'])){
                    $pni_stm[0]['oral'] = '<ul class="nutrition_pm">';
                    $oral_opt_arr = explode(",", $pni_stm[0]['oral_opt']);
                    foreach($oral_opt_arr as $km => $vm){
                        $pni_stm[0]['oral'] .= '<li>'.$ja_nein[$vm];
                        if($vm == 3){
                            $pni_stm[0]['oral'] .= ' ('.$pni_stm[0]['oral_text'].')';
                        }
                        $pni_stm[0]['oral'] .= '</li>';
                    }
                    $pni_stm[0]['oral'] .= '</ul>';
                }
                if(!empty($pni_stm[0]['oral_offer_opt'])){
                    $pni_stm[0]['oral_offer'] = '<ul class="nutrition_pm">';
                    $oral_opt_arr = explode(",", $pni_stm[0]['oral_offer_opt']);
                    foreach($oral_opt_arr as $km => $vm){
                        $pni_stm[0]['oral_offer'] .= '<li>'.$ja_nein[$vm];
                        if($vm == 3){
                            $pni_stm[0]['oral_offer'] .= ' ('.$pni_stm[0]['oral_offer_text'].')';
                        }
                        $pni_stm[0]['oral_offer'] .= '</li>';
                    }
                    $pni_stm[0]['oral_offer'] .= '</ul>';
                }
                if(!empty($pni_stm[0]['tube_feeding_opt'])){
                    $pni_stm[0]['tube_feeding'] = '<ul class="nutrition_pm">';
                    $oral_opt_arr = explode(",", $pni_stm[0]['tube_feeding_opt']);
                    foreach($oral_opt_arr as $km => $vm){
                        $pni_stm[0]['tube_feeding'] .= '<li>'.$ja_nein[$vm];
                        if($vm == 3){
                            $pni_stm[0]['tube_feeding'] .= ' ('.$pni_stm[0]['tube_feeding_text'].')';
                        }
                        $pni_stm[0]['tube_feeding'] .= '</li>';
                    }
                    $pni_stm[0]['tube_feeding'] .= '</ul>';
                }
                if(!empty($pni_stm[0]['rinsing_required_opt'])){
                    $pni_stm[0]['rinsing_required'] = '<ul class="nutrition_pm">';
                    $oral_opt_arr = explode(",", $pni_stm[0]['rinsing_required_opt']);
                    foreach($oral_opt_arr as $km => $vm){
                        $pni_stm[0]['rinsing_required'] .= '<li>'.$ja_nein[$vm];
                        if($vm == 3){
                            $pni_stm[0]['rinsing_required'] .= ' ('.$pni_stm[0]['rinsing_required_text'].')';
                        }
                        $pni_stm[0]['rinsing_required'] .= '</li>';
                    }
                    $pni_stm[0]['rinsing_required'] .= '</ul>';
                }
                
                if(!empty($pni_stm[0]['food_consistency_opt'])){
                    $food_consistency_arr = PatientNutritionInfo::getFood_consistencys();
                    $food_consistency_arr[6] = $food_consistency_arr[6].': '.$pni_stm[0]['food_consistency_text'];
                    $pni_stm[0]['food_consistency'] = '<ul class="nutrition_pm">';
                    $food_consistency_opt_arr = explode(",", $pni_stm[0]['food_consistency_opt']);
                    foreach($food_consistency_opt_arr as $km => $vm){
                        $pni_stm[0]['food_consistency'] .= '<li>'.$food_consistency_arr[$vm].'</li>';
                    }
                    $pni_stm[0]['food_consistency'] .= '</ul>';
                }

                if(!empty($pni_stm[0]['independence'])){
                    $independence_arr = PatientNutritionInfo::getIndependence();
                    $independence_arr[3] = $independence_arr[3].': '.$pni_stm[0]['independence_text'];
                    $pni_stm[0]['independence_stm'] = '<ul class="nutrition_pm">';
                    $independence_opt_arr = explode(",", $pni_stm[0]['independence']);
                    foreach($independence_opt_arr as $km => $vm){
                            $pni_stm[0]['independence_stm'] .= '<li>'.$independence_arr[$vm].'</li>';
                    }
                    $pni_stm[0]['independence_stm'] .= '</ul>';
                }
                
                if(!empty($pni_stm[0]['enrichment_required_opt'])){
                    $pni_stm[0]['enrichment_required'] = '<ul class="nutrition_pm">';
                    $oral_opt_arr = explode(",", $pni_stm[0]['enrichment_required_opt']);
                    foreach($oral_opt_arr as $km => $vm){
                        $pni_stm[0]['enrichment_required'] .= '<li>'.$ja_nein[$vm];
                        if($vm == 3){
                            $pni_stm[0]['enrichment_required'] .= ' ('.$pni_stm[0]['enrichment_required_text'].')';
                        }
                        $pni_stm[0]['enrichment_required'] .= '</li>';
                    }
                    $pni_stm[0]['enrichment_required'] .= '</ul>';
                }
                if(!empty($pni_stm[0]['enrichment_required_opt'])){
                    $pni_stm[0]['enrichment_required'] = '<ul class="nutrition_pm">';
                    $oral_opt_arr = explode(",", $pni_stm[0]['enrichment_required_opt']);
                    foreach($oral_opt_arr as $km => $vm){
                        $pni_stm[0]['enrichment_required'] .= '<li>'.$ja_nein[$vm];
                        if($vm == 3){
                            $pni_stm[0]['enrichment_required'] .= ' ('.$pni_stm[0]['enrichment_required_text'].')';
                        }
                        $pni_stm[0]['enrichment_required'] .= '</li>';
                    }
                    $pni_stm[0]['enrichment_required'] .= '</ul>';
                }
            $pni_stm[0]['food'] .= '</ul>';
            

            $pni_stm[0]['liquid'] = '<ul class="nutrition_pm">';
            if(!empty($pni_stm[0]['thicken_opt'])){
                $pni_stm[0]['thicken'] = '<ul class="nutrition_pm">';
                $allergies_opt_arr = explode(",", $pni_stm[0]['thicken_opt']);
                foreach($allergies_opt_arr as $km => $vm){
                    $pni_stm[0]['thicken'] .= '<li>'.$ja_nein[$vm];
                    if($vm == 3){
                        $pni_stm[0]['thicken'] .= ' ('.$pni_stm[0]['thicken_text'].')';
                    }
                    $pni_stm[0]['thicken'] .= '</li>';
                }
                $pni_stm[0]['thicken'] .= '</ul>';
            }
            if(!empty($pni_stm[0]['administration_opt'])){
                $administration_arr = PatientNutritionInfo::getAdministration();
                $administration_arr[6] = $administration_arr[6].': '.$pni_stm[0]['administration_text'];
                $pni_stm[0]['administration'] = '<ul class="nutrition_pm">';
                $allergies_opt_arr = explode(",", $pni_stm[0]['administration_opt']);
                foreach($allergies_opt_arr as $km => $vm){
                       $pni_stm[0]['administration'] .= '<li>'.$administration_arr[$vm].'</li>';
                }
                $pni_stm[0]['administration'] .= '</ul>';
            }
            $pni_stm[0]['liquid'] .= '</ul>';
 
        }
        
        return $pni_stm;
        
    }
    
    
}

?>





