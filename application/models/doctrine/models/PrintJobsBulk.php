<?php

/**
 * PrintJobsBulk
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ISPC
 * @subpackage Application (2020-08-27)
 * @author     Ancuta <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 * ISPC-2609 Ancuta
 */
class PrintJobsBulk extends BasePrintJobsBulk
{            
    /**
     * translations are grouped into an array
     * @var unknown
     */
    const LANGUAGE_ARRAY    = 'printjobsbulk_lang';
            
    /**
     * define the FORMID and FORMNAME, if you want to piggyback some triggers
     * @var unknown
     */
    const TRIGGER_FORMID    = null;
    const TRIGGER_FORMNAME  = 'frm_printjobsbulk';
            
    /**
     * insert into patient_files will use this
     */
    const PATIENT_FILE_TABNAME  = 'PrintJobsBulk';
    const PATIENT_FILE_TITLE    = 'PrintJobsBulk PDF'; //this will be translated
            
    /**
     * insert into patient_course will use this
     */
    const PATIENT_COURSE_TITLE      = 'PrintJobsBulk PDF was created';
    const PATIENT_COURSE_TABNAME    = 'printjobsbulk';
    const PATIENT_COURSE_TYPE       = ''; // add letter

    
    /**
     * ISPC-2609 Ancuta 28.08.2020
     * 
     */
    public   function cronjob_proccess_print_jobs(){
     
        //if an active printjob return
        $msg ="";
        $jobs_q= Doctrine_Query::create()
        ->select('*')
        ->from('PrintJobsBulk')
        ->whereIn("status",array('active','in_progress'))
        ->orderBy('create_date ASC')
        ->fetchArray();
        

        if(empty($jobs_q)){
            $msg ="__No print jobs for proccess ___ ";
            return $msg ;
        }
        
        $jobs_in_progress = array();
        $jobs2proccess = array();
        foreach($jobs_q as $pk=>$job){
            if($job['status'] == 'in_progress'){
                $jobs_in_progress[] = $job;
            } elseif($job['status'] == 'active'){
                $jobs2proccess[] = $job;
            }
        }
        if(!empty($jobs_in_progress)){
            $msg ="__There are pront jobs in progress... wait! ___ ";
            return $msg ;
        }
        
        
        if(empty($jobs2proccess)){
            $msg ="__No print jobs for proccess - no active ___ ";
            return $msg ;
        }
        
        usort($jobs2proccess, array(new Pms_Sorter('create_date'), "_date_compare"));
        
        foreach($jobs2proccess as $k => $v){
            $jobs2proccess[$k]['params'] = unserialize($v['print_params']); 
            
            if($v['print_controller'] == 'invoicenew'){
            
                
                include 'InvoicenewController.php';
                $invoiceController = new InvoicenewController($this->_request, $this->_response);
                
                foreach($jobs2proccess[$k]['params']['invoices'] as $k=>$inv_id){
                    
                    $print_params = array();
                    $print_params['invoices'] = array($inv_id);
                    $print_params['batch_print'] = '1';
                    $print_params['only_pdf'] = '1';
                    $print_params['get_pdf'] = '0';
                    $print_params['print_job'] = '1';
                    
                    $print_params['userid'] = $v['user'];
                    $print_params['invoice_type'] = $v['invoice_type'];
                    $print_params['print_job'] = 1;
                    
                    $generete_individual_pdfs = $invoiceController->$v['print_function']($print_params);
                }
                
            }
        }
        
        
        
        
        
//         $params['invoices'] = $_POST['document']; //contains invoices ids to be printed
//         $params['batch_print'] = '1'; //enables batch print procedure
//         $params['only_pdf'] = '1'; //stops invoice calculation(from system data)
//         $params['get_pdf'] = '0'; //stops downloading single pdf
//         $params['print_job'] = '1'; //stops downloading single pdf
        
//         //ISPC-2609 Ancuta 27.08.2020 :: Do not print, add to print jobs
//         $this->anlage14_invoice($params);
        
        
        
    }
    
    
    
    

}