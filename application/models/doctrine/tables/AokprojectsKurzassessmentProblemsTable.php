<?php

/**
* AokKurzassessmentProblemsTable
* ISPC-2625, AOK Kurzassessment, 04.07.2020, elena
 * cloned from AssessmentProblemsTable
 *
* This class has been auto-generated by the Doctrine ORM Framework
*
* @method createIfNotExistsOneBy($fieldName, $value = null, array $data = array())
* @method findOrCreateOneBy($fieldName, $value = null, array $data = array())
*
* @package    ISPC
* @subpackage Application (2018-12-14)
* @author     claudiu <office@originalware.com>
* @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
*/
class AokprojectsKurzassessmentProblemsTable extends Pms_Doctrine_Table
{
/**
* Returns an instance of this class.
*
* @return AokprojectsKurzassessmentProblemsTable (object)
*/
public static function getInstance()
{
return Doctrine_Core::getTable('AokprojectsKurzassessmentProblems');
}



/**
*
* @param string $ipid
* @param mixed $hydrationMode
* @return void|Doctrine_Collection
*/
public static function findAllMamboAssessmentFeedback($ipid = null, $hydrationMode = Doctrine_Core::HYDRATE_RECORD)
{

if (empty($ipid) || ! is_string($ipid)) {
return; //fail-safe
}

if ( ! self::getInstance()->hasRelation('AokprojectsKurzassessment')) {
self::getInstance()->hasOne('AokprojectsKurzassessment', ['local' => 'assessment_id', 'foreign' => 'id']);
}

return self::getInstance()->createQuery('apt')
->select("apt.*, mat.*")
->leftJoin("apt.AokprojectsKurzassessment mat")
->where('mat.ipid = ? ', $ipid)
->andWhere("apt.assessment_name = 'AokprojectsKurzassessment'")
->andWhere("apt.feedback = 'yes'")
->execute(null, $hydrationMode);
}



/**
*
* @param string $ipid
* @param mixed $hydrationMode
* @return void|Doctrine_Collection
*/
public static function findAllMamboAssessmentTodo($ipid = null, $hydrationMode = Doctrine_Core::HYDRATE_RECORD)
{

if (empty($ipid) || ! is_string($ipid)) {
return; //fail-safe
}

if ( ! self::getInstance()->hasRelation('AokprojectsKurzassessment')) {
self::getInstance()->hasOne('AokprojectsKurzassessment', ['local' => 'assessment_id', 'foreign' => 'id']);
}

return self::getInstance()->createQuery('apt')
->select("apt.*, mat.*")
->leftJoin("apt.AokprojectsKurzassessment mat")
->where('mat.ipid = ? ', $ipid)
->andWhere("apt.assessment_name = 'AokprojectsKurzassessment'")
->andWhere("apt.todo = 'yes'")
->execute(null, $hydrationMode);
}



/**
* return formated string that can be used to replace token $mambo_feedback$
*
* @param string $ipid
* @return string
*/
public static function fetchTokenMamboFeedback($ipid = '')
{
$result = '';

if (empty($ipid) || ! is_string($ipid)) {
return $result; //fail-safe
}

$values = self::findAllMamboAssessmentFeedback($ipid, Doctrine_Core::HYDRATE_ARRAY);

if ( ! empty($values)) {

$values = array_column( array_column($values, 'feedback_val') , 'freetext');

$result = implode("\n", $values);
}

return $result;
}

}