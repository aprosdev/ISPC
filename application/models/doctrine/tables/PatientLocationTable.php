<?php

/**
 * PatientLocationTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @method createIfNotExistsOneBy($fieldName, $value = null, array $data = array())
 * @method findOrCreateOneBy($fieldName, $value = null, array $data = array())
 * 
 * @package    ISPC
 * @subpackage Application (2019-11-07) - ISPC-2426
 * @author     carmen <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class PatientLocationTable extends Pms_Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return PatientLocationTable (object)
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('PatientLocation');
    }
    
    /**
     *
     * @param array $ipids
     * @param mixed $hydrationMode
     * @return void|Doctrine_Collection
     */
    public static function findAllPatientsLocations($ipids = null, $hydrationMode = Doctrine_Core::HYDRATE_ARRAY)
    {
    
    	if (empty($ipids)) {
    		return; //fail-safe
    	}
    	
    	$patients_locations = self::getInstance()->createQuery('patloc')
    		->select("patloc.*")
    		->whereIn('patloc.ipid', $ipids)
    		->andWhere('patloc.isdelete = "0"')
    		->orderBy('patloc.ipid, patloc.valid_from, patloc.id ASC')
    		->execute(null, $hydrationMode);
    	
    	foreach($patients_locations as $pat_loc)
    	{
    		$patients_locations_ipids[$pat_loc['ipid']][] = $pat_loc;
    	}
    	//var_dump($patients_locations_ipids); exit;
    		
    	return $patients_locations_ipids;
    }
}