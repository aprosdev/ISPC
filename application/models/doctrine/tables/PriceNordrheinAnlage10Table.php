<?php

/**
 * PriceNordrheinAnlage10Table
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @method createIfNotExistsOneBy($fieldName, $value = null, array $data = array())
 * @method findOrCreateOneBy($fieldName, $value = null, array $data = array())
 * 
 * @package    ISPC
 * @subpackage Application (2019-12-10)
 * @author     Carmen <office@originalware.com> ISPC-2495
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class PriceNordrheinAnlage10Table extends Pms_Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return PriceNordrheinAnlage10Table (object)
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('PriceNordrheinAnlage10');
    }
    
    /**
     *
     * @param mixed $hydrationMode
     * @return void|Doctrine_Collection
     */
    public static function findListsPrices($list, $clientid, $default_price_list, $hydrationMode = Doctrine_Core::HYDRATE_ARRAY)
    {

    	$res_prices = array();
    	
    	if (empty($list) || empty($clientid)) {
            
	    	foreach($default_price_list as $k_s => $v_s)
	    	{
	    		$res_prices['default'][$k_s]['price'] = $v_s;
	    		$res_prices['default'][$k_s]['shortcut'] = $k_s;
	    	}
            return $res_prices;
        }
        
        if(is_array($list))
        {
        	$list_ids = array_column($list, 'id');
        }
        else 
        {
        	$list_ids[] = $list;
        }
        
    	$res = self::getInstance()->createQuery('lp')
    	->select("lp.*")
    	->where("lp.clientid= ?", $clientid)
        ->andWhereIn('lp.list', $list_ids)
        ->orderBy('lp.id ASC')
    	->execute(null, $hydrationMode);
    	
    	if ($res) {
    		foreach ($res as $k_res => $v_res) {
    			$res_prices[$v_res['list']]['start'] = date('Y-m-d', strtotime($list[$v_res['list']]['start']));
    			$res_prices[$v_res['list']]['end'] = date('Y-m-d', strtotime($list[$v_res['list']]['end']));
    			$res_prices[$v_res['list']][$v_res['shortcut']] = $v_res;
    			$res_list_ids[] = $v_res['list'];
    		}
    	
    		$res_list_ids = array_values(array_unique($res_list_ids));
    	
    		// sort both ids array
    		asort($res_list_ids);
    		asort($list_ids);
    	
    		$empty_price_list = array_diff($list_ids, $res_list_ids);
    	
    		foreach ($empty_price_list as $key_pl => $v_pl) {
    			foreach($default_price_list as $k_s => $v_s)
    			{
    				$res_prices[$v_pl]['start'] = date('Y-m-d', strtotime($list[$v_pl]['start']));
    				$res_prices[$v_pl]['end'] = date('Y-m-d', strtotime($list[$v_pl]['end']));
    				$res_prices[$v_pl][$k_s]['price'] = $v_s;
    				$res_prices[$v_pl][$k_s]['shortcut'] = $k_s;
    			}
    		}

    	} else {
    		// in case of finding nothing
    		foreach ($list_ids as $key_pl => $v_pl) {
    			foreach($default_price_list as $k_s => $v_s)
    			{
    				$res_prices[$v_pl]['start'] = date('Y-m-d', strtotime($list[$v_pl]['start']));
    				$res_prices[$v_pl]['end'] = date('Y-m-d', strtotime($list[$v_pl]['end']));
    				$res_prices[$v_pl][$k_s]['price'] = $v_s;
    				$res_prices[$v_pl][$k_s]['shortcut'] = $k_s;
    			}
    		}

    	}
    	
    	return $res_prices;
    }
}