<?php

/**
 * VoluntaryworkersAvailabilityScheduleTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @method createIfNotExistsOneBy($fieldName, $value = null, array $data = array())
 * @method findOrCreateOneBy($fieldName, $value = null, array $data = array())
 * 
 * @package    ISPC
 * @subpackage Application (2019-08-13)
 * @author     Ancuta <office@originalware.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class VoluntaryworkersAvailabilityScheduleTable extends Pms_Doctrine_Table
{

    /**
     * Returns an instance of this class.
     *
     * @return VoluntaryworkersAvailabilityScheduleTable (object)
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('VoluntaryworkersAvailabilitySchedule');
    }

    /**
     *
     * @param unknown $clientid            
     * @param unknown $hydrationMode            
     * @return Doctrine_Collection
     */
    public static function findvwactivityschedule($vw_id, $clientid, $hydrationMode = Doctrine_Core::HYDRATE_ARRAY)
    {
        if (empty($vw_id)) {
            return false;
        }
        if (empty($clientid)) {
            return false;
        }
        return self::getInstance()->createQuery('vas')
            ->select("vas.*")
            ->where('vas.clientid = ? ', $clientid)
            ->andWhere('vas.vw_id = ? ', $vw_id)
            ->execute(null, $hydrationMode);
    }

    /**
     * 
     * @param string $week_day
     * @param string $work_period
     * @param unknown $clientid
     * @param unknown $hydrationMode
     * @return boolean|multitype:
     */
    public static function find_vw_activity_schedule_by_work($week_day = false, $work_period = false, $clientid, $hydrationMode = Doctrine_Core::HYDRATE_ARRAY)
    {
        
        if (empty($clientid)) {
            return false;
        }
        
        // If both seach filter are false or empty  return
        if ( !$week_day && !$work_period ) { 
            return false;
        }
        
        $vsch = self::getInstance()->createQuery('vas')
            ->select("*")
            ->where('clientid = ? ', $clientid);
        if ($week_day) {
            $vsch->andWhere('week_day = ? ', $week_day);
        }
        if ($work_period) {
            if ($work_period == "allday") {
            } else {
                $vsch->andWhere($work_period . ' = 1 ');
            }
        }
        $result = $vsch->fetchArray();
        
        if (! empty($result)) {
            $result_arr = array_unique(array_column($result, 'vw_id'));
            return $result_arr;
        } else {
            return false;
        }
    }
}